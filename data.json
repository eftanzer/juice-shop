{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "SnykCode",
          "semanticVersion": "1.0.0",
          "version": "1.0.0",
          "rules": [
            {
              "id": "javascript/ZipSlip",
              "name": "ZipSlip",
              "shortDescription": {
                "text": "Arbitrary File Write via Archive Extraction (Zip Slip)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nZip Slip is a form of directory traversal that can be exploited by extracting files from an archive. The premise of the directory traversal vulnerability is that an attacker can gain access to parts of the file system outside of the target folder in which they should reside. The attacker can then overwrite executable files and either invoke them remotely or wait for the system or user to call them, thus achieving remote command execution on the victimâ€™s machine. The vulnerability can also cause damage by overwriting configuration files or other sensitive resources, and can be exploited on both client (user) machines and servers.\n\n## Example\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "ZipSlip",
                  "Security",
                  "SourceArchive",
                  "<unknown>",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/cmints/cmints/commit/?diff=split#diff-e6a2dd0846c99c00a2375afec88d8c46f32e19e16a19b45990634e1a7e715df9L-1",
                    "lines": [
                      {
                        "line": "\tmainEntry = path.join('/', mainEntry).substr(1);\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tif (!mainEntry || mainEntry === '..') {\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\treturn;\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t}\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "zip.extractAllTo(tempDir, true);\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "moveSync(path.join(tempDir, mainEntry), srcPath, {overwrite: true});\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/kevva/decompress/commit/?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1",
                    "lines": [
                      {
                        "line": "\t\t\t\tif (file === '..') {\n",
                        "lineNumber": 113,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t\treturn;\n",
                        "lineNumber": 114,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\t\t\t}\n",
                        "lineNumber": 115,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 116,
                        "lineChange": "added"
                      },
                      {
                        "line": "                if (self.strip) {\n",
                        "lineNumber": 117,
                        "lineChange": "none"
                      },
                      {
                        "line": "                    dir = dir.slice(self.strip);\n",
                        "lineNumber": 118,
                        "lineChange": "none"
                      },
                      {
                        "line": "                }\n",
                        "lineNumber": 119,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 120,
                        "lineChange": "none"
                      },
                      {
                        "line": "                dest = path.join(self.path, dir.join(path.sep), file);\n",
                        "lineNumber": 121,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 122,
                        "lineChange": "none"
                      },
                      {
                        "line": "                mkdir.sync(path.dirname(dest));\n",
                        "lineNumber": 123,
                        "lineChange": "none"
                      },
                      {
                        "line": "                fs.writeFileSync(dest, entry.getData());\n",
                        "lineNumber": 124,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/jsdevel/webdriver-sync/commit/?diff=split#diff-2ca92bd6a76d65807191414f4e67de90eb45dfc97f91f7f2036f7d0c6b6bdbeaL-1",
                    "lines": [
                      {
                        "line": "const safeEntry = path.join('/', entry.path).substr(1);\n",
                        "lineNumber": 95,
                        "lineChange": "added"
                      },
                      {
                        "line": "if (!safeEntry || safeEntry === '..') {\n",
                        "lineNumber": 96,
                        "lineChange": "added"
                      },
                      {
                        "line": "  return;\n",
                        "lineNumber": 97,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 98,
                        "lineChange": "added"
                      },
                      {
                        "line": "entry.pipe(fs.createWriteStream(\n",
                        "lineNumber": 99,
                        "lineChange": "none"
                      },
                      {
                        "line": "  path.resolve(ieConfig.binary.path, entry.path),\n",
                        "lineNumber": 96,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  path.join(ieConfig.binary.path, safeEntry),\n",
                        "lineNumber": 100,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 30,
                "cwe": [
                  "CWE-22"
                ]
              }
            },
            {
              "id": "javascript/NoHardcodedPasswords/test",
              "name": "NoHardcodedPasswords/test",
              "shortDescription": {
                "text": "Use of Hardcoded Credentials"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nDevelopers may use hardcoded credentials for convenience when coding in order to simplify their workflow. While they are responsible for removing these before production, occasionally this task may fall through the cracks. This also becomes a maintenance challenge when credentials are re-used across multiple applications.\n\nOnce attackers gain access, they may take advantage of privilege level to remove or alter data, take down a site or app, or hold any of the above for ransom. The risk across multiple similar projects is even greater. If code containing the credentials is reused across multiple projects, they will all be compromised.\n\n## Best practices for prevention\n* Plan software architecture such that keys and passwords are always stored outside the code, wherever possible.\n* Plan encryption into software architecture for all credential information and ensure proper handling of keys, credentials, and passwords.\n* Prompt for a secure password on first login rather than hard-code a default password.\n* If a hardcoded password or credential must be used, limit its use, for example, to system console users rather than via the network.\n* Use strong hashes for inbound password authentication, ideally with randomly assigned salts to increase the difficulty level in case of brute-force attack.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "NoHardcodedPasswords",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Gitualize/Gitualize/commit/f6de5689d637dc41abd4b43eea40371fd1088d33?diff=split#diff-273ae97b30b3f18c1d3fc9bf418b55be30c6e4a19f3f51953362cfa762980c63L-1",
                    "lines": [
                      {
                        "line": "user: 'docker',\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password: 'docker',\n",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "database: 'docker',\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "user: process.env.DATABASE_USER,\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "password: process.env.DATABASE_PASSWORD,\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "database: process.env.DATABASE_NAME,\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/UsabilityDynamics/node-rabbit-client/commit/bf652950ac5eb1cd85ebe349b29ad045df51dd07?diff=split#diff-506a1dcb4e0d34ef96430d0fa0790cc3e84cbf193ea91b3e49e5e52c86dad0f4L-1",
                    "lines": [
                      {
                        "line": "login        : 'udx',\n",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password     : 'ISM0Rules'\n",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "login        : process.env.RABBIT_LOGIN,\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "password     : process.env.RABBIT_PASSWORD\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/perborgen/data_hub/commit/8de6d9c7efdc6d0a773808c872c83f3374643a8e?diff=split#diff-58417e0f781b6656949d37258c8b9052ed266e2eb7a5163cad7b0863e6b2916aL-1",
                    "lines": [
                      {
                        "line": "var config  = require('./config');\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "var handler = require('./api/handler');\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "var inert   = require('inert');\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "var bell    = require('bell');\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "var hapiAC  = require('hapi-auth-cookie');\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.connection({\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "    port: process.env.PORT || 8080,\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "    host: \"0.0.0.0\" || \"localhost\"\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "server.register([inert, bell, hapiAC], function(err){\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "    if (err) {\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "        throw err;\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    var authCookieOptions = {\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "        password: 'cookie-encryption-password', //Password used for encryption\n",
                        "lineNumber": 20,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        cookie: 'sitepoint-auth', // Name of cookie to set\n",
                        "lineNumber": 21,
                        "lineChange": "removed"
                      },
                      {
                        "line": "        password: config.password || process.env.PASSWORD, //Password used for encryption\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "        cookie: 'auth', // Name of cookie to set\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 44,
                "cwe": [
                  "CWE-798",
                  "CWE-259"
                ]
              }
            },
            {
              "id": "javascript/NoRateLimitingForExpensiveWebOperation",
              "name": "NoRateLimitingForExpensiveWebOperation",
              "shortDescription": {
                "text": "Allocation of Resources Without Limits or Throttling"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\n\nWithout unlimited resources, software operating in the real world is inherently limited in the resources it may consume; similarly, servers are limited by the number of simultaneous sessions they can handle. Therefore, it is important for developers to design software that considers these real-world physical (or virtual) limitations and limits user sessions accordingly, both in terms of the number of user sessions and in the quantity of resources each user may demand. Software with this weakness does not include such limitations and as a result, individual user sessions may consume too many resources, leading to unintended software behavior including, potentially, denial of service. This can be compared to a single restaurant customer emptying out the entire buffet, leaving no food for other customers--or an entire busload mobbing the buffet all at once, with a similar effect. This may happen inadvertently or as a result of an attack by a malicious user.\n\n## Best practices for prevention\n* Test extensively to obtain baseline values indicating how the software performs in the real world under various conditions (normal and peak); use these values to determine reasonable software limits.\n* Set clear limits for all flexible parameters such as maximum allocable memory, number of processes within a given timeframe, file descriptors, requests per client, number of records per request, etc. This is particularly true for any parameters within user control.\n* Release all resources when no longer in use, including incorporating timeouts for inactive users, processes, and resources.\n* Familiarize Dev, Ops, and IT teams with best practices for recognizing and preventing DoS attacks and out-of-control resource allocation to prevent catastrophic failures.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "NoRateLimitingForExpensiveWebOperation",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/natsukagami/themis-web-interface/commit/e1ef34f8b95e7eefab54c204b78fbdee70169a6d?diff=split#diff-cd0e12b228a7dea99a7346adf68cfc7a6a2c321846cc8a90fc6cd92cf8066d5eL-1",
                    "lines": [
                      {
                        "line": "router.post('/', (req, res, next) => {\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const rateLimiter = require('../controls/rate-limiter')({\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t// Allow 3 submits, then slows down\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tfreeRetries: 30,\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tminWait: 2 * 60 * 60,\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tmaxWait: 2 * 60 * 60,\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tlifetime: 60 * 60\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "router.post('/', rateLimiter.prevent, (req, res, next) => {\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Waifu-pics/waifu-api/commit/da0d3b4ee8dd4e2ab0a789dfd04cb304a537368e?diff=split#diff-0eddd48e85f4f98a238d49bfe0b4cf514b1430322bcdc196b1a97786e0ec30c8L-1",
                    "lines": [
                      {
                        "line": "const rateLimit = require(\"express-rate-limit\")\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "module.exports = ({ db, app, config, s3 }) => {\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "    // Checking if user is Admin to prevent rate limit middleware\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "    const chkAdmin = async (req, res, next) => {\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "        const { token } = req.headers\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "        const Admins = db.collection('admins')\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "        req.chkAdmin = Boolean(req.headers.token && typeof token === \"string\" && Boolean(await Admins.findOne({token})))\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "        \n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "        next()\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "    // Rate limit middleware\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "    const limiter = rateLimit({\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "        windowMs: 10 * 60 * 1000, // 10 minutes\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "        max: 15,\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "        message: \"You can only upload 15 files per 10 minutes!\",\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "        statusCode: 400,\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "        skip: function (req) {\n",
                        "lineNumber": 23,
                        "lineChange": "added"
                      },
                      {
                        "line": "            return req.chkAdmin\n",
                        "lineNumber": 24,
                        "lineChange": "added"
                      },
                      {
                        "line": "        }\n",
                        "lineNumber": 25,
                        "lineChange": "added"
                      },
                      {
                        "line": "    })\n",
                        "lineNumber": 26,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "    // Do shit to upload\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.use(\"/api/upload\", chkAdmin, limiter)\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "    app.use(fileUpload({\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "        limits: { fileSize: config.maxUploadSize * 1024 * 1024 },\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "        abortOnLimit: true,\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "        createParentPath: true\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }))\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app.post('/api/upload', async (req, res) => {\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/davidmerfield/Blot/commit/f2bcb51b129075c8ebe5c1c23fac36dee35e800c?diff=split#diff-31b7f0d966974821a84da24ef72a8b290d5b82d34861dbdf7be2743821b2f4f5L-1",
                    "lines": [
                      {
                        "line": "// stores state locally, don't use this in production\n",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// var brute = require('express-brute');\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// var store = new brute.MemoryStore();\n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "// var limiter = new brute(store);\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var client = require('client');\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "var Brute = require('express-brute');\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "var RedisStore = require('express-brute-redis');\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "var store = new RedisStore({\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "    client: client,\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "    prefix: 'brute:'\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "var limiter = new Brute(store, {\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "  freeRetries: 200,\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      },
                      {
                        "line": "  failCallback: onLimit,\n",
                        "lineNumber": 21,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 22,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "var login = Express.Router();\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "var form = login.route('/');\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "form.all(limiter.prevent);\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "form.get(checkToken, function(req, res){\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "  res.render('log-in-email');\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "form.post(parse, checkEmail, checkReset, checkPassword);\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "form.all(errorHandler);\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "function onLimit (req, res, next, until) {\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "  res.status(429).send('Log in rate limit hit. Please wait ' + moment(until).toNow(true) + ' before retrying.');\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 27,
                "cwe": [
                  "CWE-770"
                ]
              }
            },
            {
              "id": "javascript/HttpToHttps/test",
              "name": "HttpToHttps/test",
              "shortDescription": {
                "text": "Cleartext Transmission of Sensitive Information"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\nThis weakness occurs when software transmits sensitive information, such as passwords or credit card numbers, in unencrypted form. This information may then be intercepted by threat actors using sniffer tools or interception techniques such as man-in-the-middle (MITM) attacks (often involving social engineering). Attackers can then use information gleaned to perform a variety of actions, depending on the information type. Possible actions include gaining unauthorized access, impersonating a user, moving laterally within the organization's network, or retrieving and potentially modifying files. This weakness is almost completely avoidable through intelligent architecture and design.\n\n## Best practices for prevention\n* Build web applications around a security mindset and the awareness that sniffers may be present at any time.\n* Ensure that all sensitive data transmission uses reliable encryption.\n* Implement security measures so that sensitive results are never returned in plain text.\n* Implement multiple-factor authentication methods to validate remote instances.\n* Use SSL not only at logon but throughout communications.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HttpToHttps",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/eserozvataf/apibone/commit/bbac9343971a20f4fee124b6f0a2f6a80895fb35?diff=split#diff-8b733ca241b0609b1fc0f2e60d14f911b3a82997a939e7eb01fe6c25b759c234L-1",
                    "lines": [
                      {
                        "line": "const http = require('http'),\n",
                        "lineNumber": 0,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const https = require('https'),\n",
                        "lineNumber": 0,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/RetireJS/retire.js/commit/82d44d60c98acba0e4c3772709e76b989c4274bb?diff=split#diff-89d400752fb89d946a43778e9f0b3dba25968dcdf8604ae08adbb3ecb236338fL-1",
                    "lines": [
                      {
                        "line": "var http = require('http'),\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var http = require('https'),\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Rich-Harris/packd/commit/c14d17da80ed075ee007de3121422fb2c5b77e4d?diff=split#diff-1821d11fbffbab2187701c42616688d46bf66d7b2cf6eaf363548dd66caa6ebaL-1",
                    "lines": [
                      {
                        "line": "const http = require( 'http' );\n",
                        "lineNumber": 0,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const https = require( 'https' );\n",
                        "lineNumber": 0,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "module.exports = function get ( url ) {\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "\treturn new Promise( ( fulfil, reject ) => {\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "\t\thttp.get( url, response => {\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "\t\thttps.get( url, response => {\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 122,
                "cwe": [
                  "CWE-319"
                ]
              }
            },
            {
              "id": "javascript/HardcodedNonCryptoSecret",
              "name": "HardcodedNonCryptoSecret",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HardcodedNonCryptoSecret",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/markstock7/FileManager/commit/50572778825dea6b6fdb34c9ae950d9915743e4c?diff=split#diff-408990876524f4737b49693cedc52fd267e31f665d0a7f71792dcb986d6a8268L-1",
                    "lines": [
                      {
                        "line": "accessKeyId: 'pT3KujnBPxc0ey7G',\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "secretAccessKey: 'CcHjh2y7tIFljxgUT4U8sQLctkMBHu',\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "accessKeyId: '',\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "secretAccessKey: '',\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/rodrigotamura/go-stack-2019/commit/26e020dfc2272fe76c82c28d86f492c3c84a94c5?diff=split#diff-92f76c0bccc1f970244da3b50449f200d4787cf60a87be14ff4f250d0ba1a590L-1",
                    "lines": [
                      {
                        "line": "secret: '632ca4dfc8b2269e6fdf03ab5a55d2ec',\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "secret: process.env.APP_SECRET,\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/appcypher/events-manager-io/commit/656fdf6bfb902894db36b4b3ea98441ee607b75e?diff=split#diff-0cd5bb6f9779938a122d3bfef4a22f6fc66e59742c3a377dde667d8a6c5f5e16L-1",
                    "lines": [
                      {
                        "line": "password: bcrypt.hashSync('admin', 10),\n",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password: bcrypt.hashSync(process.env.ADMIN_SEED_PASSWORD, 10),\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 68,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "javascript/PT",
              "name": "PT",
              "shortDescription": {
                "text": "Path Traversal"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA Directory Traversal attack (also known as path traversal) aims to access files and directories that are stored outside the intended folder. By manipulating files with \"dot-dot-slash (../)\" sequences and its variations, or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system, including application source code, configuration, and other critical system files.\n\nBeing able to access and manipulate an arbitrary path leads to vulnerabilities when a program is being run with privileges that the user providing the path should not have. A website with a path traversal vulnerability would allow users access to sensitive files on the server hosting it. CLI programs may also be vulnerable to path traversal if they are being ran with elevated privileges (such as with the setuid or setgid flags in Unix systems).\n\nDirectory Traversal vulnerabilities can be generally divided into two types:\n\n- **Information Disclosure**: Allows the attacker to gain information about the folder structure or read the contents of sensitive files on the system.\n\n`st` is a module for serving static files on web pages, and contains a [vulnerability of this type](https://snyk.io/vuln/npm:st:20140206). In our example, we will serve files from the `public` route.\n\nIf an attacker requests the following URL from our server, it will in turn leak the sensitive private key of the root user.\n\n```\ncurl http://localhost:8080/public/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/root/.ssh/id_rsa\n```\n**Note** `%2e` is the URL encoded version of `.` (dot).\n\n- **Writing arbitrary files**: Allows the attacker to create or replace existing files. This type of vulnerability is also known as `Zip-Slip`.\n\nOne way to achieve this is by using a malicious `zip` archive that holds path traversal filenames. When each filename in the zip archive gets concatenated to the target extraction folder, without validation, the final path ends up outside of the target folder. If an executable or a configuration file is overwritten with a file containing malicious code, the problem can turn into an arbitrary code execution issue quite easily.\n\nThe following is an example of a `zip` archive with one benign file and one malicious file. Extracting the malicious file will result in traversing out of the target folder, ending up in `/root/.ssh/` overwriting the `authorized_keys` file:\n\n```\n2018-04-15 22:04:29 .....           19           19  good.txt\n2018-04-15 22:04:42 .....           20           20  ../../../../../../root/.ssh/authorized_keys\n```",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "PT",
                  "Security",
                  "SourceServer",
                  "SourceCookie",
                  "<unknown>",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/eclipse-vertx/vert.x/commit/d1183271de193b6bef158e2b1dfb5ba65a15cbc9?diff=split#diff-fa3b44a1f7fa945e9aedd043ef316ad52d191aef30871789663bea3426ba14baL-1",
                    "lines": [
                      {
                        "line": "} else if (req.path.indexOf('..') == -1) {\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  req.response.sendFile(\".\" + req.path);\n",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "} else if (req.path().indexOf('..') == -1) {\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "  req.response.sendFile(\".\" + req.path());\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/iamfrntdv/adm-dev-kit/commit/8edeb067e703a642cb7ac7c88fb95fce8dd9c248?diff=split#diff-52baeef6a12dda5ae6078825eeb32958966ba6cbdd56792899f6273fecd26eabL-1",
                    "lines": [
                      {
                        "line": "const img = fs.readFileSync(filePath);\n",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.end(img);\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.sendFile(filePath, {root: './'});\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/substack/shipboard/commit/e2722480410eea3f3d7b51730dcdea49df649cd2?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1",
                    "lines": [
                      {
                        "line": "    if (has(pages, req.url)) {\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    var p = req.url.split(/[#?]/)[0];\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (p === '/') {\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "        html('layout.html').pipe(hyperstream({\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "            '#content': html(pages[req.url])\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            '[page=create]': html('create.html'),\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "            '[page=view]': html('view.html'),\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "            '[page=edit]': html('edit.html')\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "        })).pipe(res);\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "    else st(req, res);\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "};\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "function html (file) {\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return fs.createReadStream(path.join(__dirname, 'html', file));\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 40,
                "cwe": [
                  "CWE-23"
                ]
              }
            },
            {
              "id": "javascript/HardcodedNonCryptoSecret/test",
              "name": "HardcodedNonCryptoSecret/test",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HardcodedNonCryptoSecret",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/markstock7/FileManager/commit/50572778825dea6b6fdb34c9ae950d9915743e4c?diff=split#diff-408990876524f4737b49693cedc52fd267e31f665d0a7f71792dcb986d6a8268L-1",
                    "lines": [
                      {
                        "line": "accessKeyId: 'pT3KujnBPxc0ey7G',\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "secretAccessKey: 'CcHjh2y7tIFljxgUT4U8sQLctkMBHu',\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "accessKeyId: '',\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "secretAccessKey: '',\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/rodrigotamura/go-stack-2019/commit/26e020dfc2272fe76c82c28d86f492c3c84a94c5?diff=split#diff-92f76c0bccc1f970244da3b50449f200d4787cf60a87be14ff4f250d0ba1a590L-1",
                    "lines": [
                      {
                        "line": "secret: '632ca4dfc8b2269e6fdf03ab5a55d2ec',\n",
                        "lineNumber": 1,
                        "lineChange": "removed"
                      },
                      {
                        "line": "secret: process.env.APP_SECRET,\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/appcypher/events-manager-io/commit/656fdf6bfb902894db36b4b3ea98441ee607b75e?diff=split#diff-0cd5bb6f9779938a122d3bfef4a22f6fc66e59742c3a377dde667d8a6c5f5e16L-1",
                    "lines": [
                      {
                        "line": "password: bcrypt.hashSync('admin', 10),\n",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "password: bcrypt.hashSync(process.env.ADMIN_SEED_PASSWORD, 10),\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 68,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "javascript/DOMXSS",
              "name": "DOMXSS",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n## Best practices for prevention\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "DOMXSS",
                  "Security",
                  "SourceNonServer",
                  "SourceResourceAccess",
                  "SourceNetworkRequest",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/Drive4ik/simple-tab-groups/commit/d23caa02378845671eb32ee2c43c368f857b47c3?diff=split#diff-efdba41d528998f946ce1103fa57532e3746b2e9b1984cb92c94a2526451aedbL-1",
                    "lines": [
                      {
                        "line": "document.getElementById('title').innerHTML = title || url;\n",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "document.getElementById('title').innerText = title || url;\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/academic/vipa/commit/31c6fc127f775fd304f484fbb74e07d6d565aa0e?diff=split#diff-f92a276b67e184a63ce4d03fb5d47c10ff0bb2f10cba449dc9d537d2300c605fL-1",
                    "lines": [
                      {
                        "line": "var $citeItemMustTpl = $(\"#step3_cite_item1_tpl\").html();\n",
                        "lineNumber": 27,
                        "lineChange": "added"
                      },
                      {
                        "line": "var $citeItemShouldTpl = $(\"#step3_cite_item2_tpl\").html();\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "for (var i in $mustFields) {\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "    $(\".citationDetailsFields\", $tpl).append(\n",
                        "lineNumber": 28,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            '<input type=\"text\" class=\"form-control has-warning\" placeholder=\"' +\n",
                        "lineNumber": 29,
                        "lineChange": "removed"
                      },
                      {
                        "line": "            $mustFields[i] + ' *\" name=\"' + $mustFields[i] + '\" /> ');\n",
                        "lineNumber": 30,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    renderedTpl = Mustache.render($citeItemMustTpl, {'name': $mustFields[i], 'value': ''});\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "    $(\".citationDetailsFields\", $tpl).append(renderedTpl);\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/188867052/MatrixAdmin/commit/2252cc42a30439859ba6a2623151514ffc86b2ef?diff=split#diff-7b7071e994f356b320dab8de63d56ee7a17ea6a65e62bdea9b39b20e452c3aa1L-1",
                    "lines": [
                      {
                        "line": "$.post(this._searchUrl, data, function (response) {\n",
                        "lineNumber": 25,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    $(\".widget-content\")[0].innerHTML = response;\n",
                        "lineNumber": 26,
                        "lineChange": "removed"
                      },
                      {
                        "line": "$.post(searchUrl, data, function (response) {\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "    successPointer(response);\n",
                        "lineNumber": 29,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 115,
                "cwe": [
                  "CWE-79"
                ]
              }
            },
            {
              "id": "javascript/NoSqli",
              "name": "NoSqli",
              "shortDescription": {
                "text": "NoSQL Injection"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nIn an NoSQL injection attack, the user can submit an NoSQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "NoSqli",
                  "Security",
                  "SourceServer",
                  "SourceHttpBody",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/afuh/pinstagram/commit/776a6b63f84b3bc9d38963933ff511b319b73ac5?diff=split#diff-fb901db253d2190ed5dec3508eb32e99524e0b4dcacdaea322a50f2619ae2d99L-1",
                    "lines": [
                      {
                        "line": "const user = await User.findOne({ slug: req.params.user }).populate('likes')\n",
                        "lineNumber": 47,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const user = await User.findOne({ _id: req.user._id }).populate('likes')\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mercmobily/hotplate/commit/c9dfbe8bf6bfd03838946d0898978543589a5ea2?diff=split#diff-bdb0afd700d4dfe1801bcfe39008d413182be643063835d326641fcce15b969aL-1",
                    "lines": [
                      {
                        "line": "  Workspace.findOne({ _id: req.params.workspaceId }, function( err, doc ){\n",
                        "lineNumber": 270,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  workspaces.findOne({ _id: ObjectId(req.params.workspaceId) }, function( err, doc ){\n",
                        "lineNumber": 264,
                        "lineChange": "added"
                      },
                      {
                        "line": "    resUtils.checkFindOneResponse( err, doc, next, function(){\n",
                        "lineNumber": 271,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 272,
                        "lineChange": "none"
                      },
                      {
                        "line": "      perms.checkPermissions( req, next, 'workspaceConfig/get', req.body, doc, function(){\n",
                        "lineNumber": 273,
                        "lineChange": "none"
                      },
                      {
                        "line": "      sendResponse( res, doc.settings );\n",
                        "lineNumber": 274,
                        "lineChange": "none"
                      },
                      {
                        "line": "    });\n",
                        "lineNumber": 275,
                        "lineChange": "none"
                      },
                      {
                        "line": "  });\n",
                        "lineNumber": 276,
                        "lineChange": "none"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 277,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/JasonEtco/flintcms/commit/4ae34238ce39fde00dfa15082397541758c07af1?diff=split#diff-9abe922e7535c6f75fba7150a7a803a93be7ae235564b86f799db9f37e4c1674L-1",
                    "lines": [
                      {
                        "line": "const token = req.query.t\n",
                        "lineNumber": 103,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const token = req.query.t.toString()\n",
                        "lineNumber": 103,
                        "lineChange": "added"
                      },
                      {
                        "line": "const user = await User.findOne({ token })\n",
                        "lineNumber": 104,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 30,
                "cwe": [
                  "CWE-943"
                ]
              }
            },
            {
              "id": "javascript/Ssrf",
              "name": "Ssrf",
              "shortDescription": {
                "text": "Server-Side Request Forgery (SSRF)"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "\n## Details\nIn a server-side request forgery attack, a malicious user supplies a URL (an external URL or a network IP address such as 127.0.0.1) to the application's back end. The server then accesses the URL and shares its results, which may include sensitive information such as AWS metadata, internal configuration information, or database contents with the attacker. Because the request comes from the back end, it bypasses access controls, potentially exposing information the user does not have sufficient privileges to receive. The attacker can then exploit this information to gain access, modify the web application, or demand a ransom payment.\n\n## Best practices for prevention\n* Blacklists are problematic and attackers have numerous ways to bypass them; ideally, use a whitelist of all permitted domains and IP addresses.\n* Use authentication even within your own network to prevent exploitation of server-side requests.\n* Implement zero trust and sanitize and validate all URL and header data returning to the server from the user. Strip invalid or suspect characters, then inspect to be certain it contains a valid and expected value.\n* Ideally, avoid sending server requests based on user-provided data altogether.\n* Ensure that you are not sending raw response bodies from the server directly to the client. Only deliver expected responses.\n* Disable suspect and exploitable URL schemas. Common culprits include obscure and little-used schemas such as `file://`, `dict://`, `ftp://`, and `gopher://`.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "Ssrf",
                  "Security",
                  "SourceServer",
                  "SourceHttpBody",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/avwo/whistle/commit/0c9040949567d7154a320b0a4a6ed45f85693cbb?diff=split#diff-92bbac9a308cd5fcf9db165841f2d90ce981baddcb2b1e26cfff170929af3bd1L-1",
                    "lines": [
                      {
                        "line": "\n",
                        "lineNumber": 61,
                        "lineChange": "removed"
                      },
                      {
                        "line": "resSocket = net.connect(options.port, ip, function() {\n",
                        "lineNumber": 62,
                        "lineChange": "removed"
                      },
                      {
                        "line": "//TODO\n",
                        "lineNumber": 61,
                        "lineChange": "added"
                      },
                      {
                        "line": "resSocket = net.connect(config.dispatcherport, '127.0.0.1', function() {\n",
                        "lineNumber": 62,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wellcometrust/wellcomecollection.org/commit/2399266a906b6573c32a18afacb7ef3a04cf61f6?diff=split#diff-d347091b60673886a3f7f9f7eaf7e970812f0fc22217d00b234df8266f46199dL-1",
                    "lines": [
                      {
                        "line": "if (uri.match('https://iiif.wellcomecollection.org')) {\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "  ctx.body = request(uri);\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "  ctx.throw('Invalid image host', 422);\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/BuilderIO/builder/commit/8078e84282e4a402887bc66d155cd03f5a31cab0?diff=split#diff-d21e0f2e1c40701c32ca79ab19e978bba8a7841137c20be48b2ece020c00aa7aL-1",
                    "lines": [
                      {
                        "line": ".get(`https://cdn.builder.io/api/v1/html/page?url=${req.path}&apiKey=${builderApiKey}`)\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": ".get(`https://cdn.builder.io/api/v1/html/page?url=${encodeURI(req.url)}&apiKey=${builderApiKey}`)\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 40,
                "cwe": [
                  "CWE-918"
                ]
              }
            },
            {
              "id": "javascript/HTTPSourceWithUncheckedType",
              "name": "HTTPSourceWithUncheckedType",
              "shortDescription": {
                "text": "Improper Type Validation"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nWhen an object is coming from `req.body` or `req.query`, coming from the express framework. The value of this property can be controlled by the user. This could be abused by an attacker to craft the properties of the object to crash the application or bypass its logic. As such, consider checking the type of the object.\n\nIf this weakness is present, illegitimate input provided from the user's end could lead to unpredictable results such as the program crashing, unauthorized access to secure resources or command execution at the server side. In addition, if the server is overwhelmed by these types of malfunctions, it may lead to denial of service to legitimate users and tasks.\n\nExample:\n\n```\nmodule.exports = function(req, res) {\n    var data = req.query;\n      // type of value isnt checked before being used\n      data.ids = data.ids.split(',');\n      doStuff(data.ids);\n\n  };\n```\n\n\n\n## Best practices for prevention\n* Adopt a zero-trust model in which all input is considered potentially suspect.\n* Check the type of the object.\n\nExample:\n\n```\nmodule.exports = function(req, res) {\n    var data = req.query;\n    if (data.ids && typeof data.ids == 'string') {\n\n      // type of value is checked\n      data.ids = data.ids.split(',');\n      doStuff(data.ids);\n    } else {}\n  };\n```\n\n##  References\n\n* [CWE-1287: Improper Validation of Specified Type of Input](https://cwe.mitre.org/data/definitions/1287.html)\n* [JavaScript type confusion: Bypassed input validation (and how to remediate)](https://snyk.io/blog/remediate-javascript-type-confusion-bypassed-input-validation/)\n* [req.query Documentation](https://expressjs.com/en/4x/api.html#req.query)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HTTPSourceWithUncheckedType",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/seismolabs/seismo/commit/16c9ab3bf2f59abccfb3533a89146fe6ff2cf8ae?diff=split#diff-c6d1f98443b5abbcf3ae833b1d6b4e4957564815da17c30679385c72fb25177aL-1",
                    "lines": [
                      {
                        "line": "function createEventId(eventName) {\n",
                        "lineNumber": 35,
                        "lineChange": "removed"
                      },
                      {
                        "line": "function createEventId(event) {\n",
                        "lineNumber": 35,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tvar eventName;\n",
                        "lineNumber": 36,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 37,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tif (typeof event === 'object' && event.id) {\n",
                        "lineNumber": 38,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\treturn event.id;\n",
                        "lineNumber": 39,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t}\n",
                        "lineNumber": 40,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 41,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tif (typeof event === 'string') {\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\teventName = event;\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t}\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 45,
                        "lineChange": "added"
                      },
                      {
                        "line": "\tif (typeof event === 'object') {\n",
                        "lineNumber": 46,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t\teventName = event.name;\n",
                        "lineNumber": 47,
                        "lineChange": "added"
                      },
                      {
                        "line": "\t}\n",
                        "lineNumber": 48,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 49,
                        "lineChange": "added"
                      },
                      {
                        "line": "\treturn eventName.toLowerCase().replace(' ', '-');\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ovanta/vue-cloudfront-api/commit/44810f0cb26c249952fe3c62f4e4bf8b8f4c45d7?diff=split#diff-18cc9160c25d4fe4ae6fc63c84a23330e13cba7925c1f5a87fcc241827f3522dL-1",
                    "lines": [
                      {
                        "line": "    // Validate\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "    if (!Array.isArray(nodes) || nodes.some(v => typeof v !== 'string')) {\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "        throw 'Invalid nodes scheme';\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "    // Find all nodes from this user and filter props\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "    return nodeModel.find({owner: user.id, id: {$in: nodes}}).exec().then(nds => {\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "        if (nds.length !== nodes.length) {\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/slco-2016/clientcomm/commit/67392fdf49765c1b42a76b6cf3eb8fac4d5c22a9?diff=split#diff-71b5c44806254c0dfb01a026f47a8d55dd86ecf77f82b3419ea64a32d612a41eL-1",
                    "lines": [
                      {
                        "line": "      // make sure that value is a string (might have been submitted as integer)\n",
                        "lineNumber": 42,
                        "lineChange": "added"
                      },
                      {
                        "line": "      if (typeof value !== 'string') value = String(value);\n",
                        "lineNumber": 43,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 44,
                        "lineChange": "added"
                      },
                      {
                        "line": "      value = value.replace(/[^0-9.]/g, '');\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 72,
                "cwe": [
                  "CWE-1287"
                ]
              }
            },
            {
              "id": "javascript/HardcodedSecret",
              "name": "HardcodedSecret",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HardcodedSecret",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/dooboolab/talktalk-node/commit/f1824b890376c8b5a4362682d4112d42334d9db3?diff=split#diff-3274f1a37032fb0ae4e2823def0007c634e869ae0dfc304ff6a12c36513c3a52L-1",
                    "lines": [
                      {
                        "line": "import jwt, { verify } from 'jsonwebtoken';\n",
                        "lineNumber": 0,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import jwt from 'jsonwebtoken';\n",
                        "lineNumber": 0,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "const APP_SECRET = 'REACT NATIVE SEOUL - DOOBOOLAB';\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const { JWT_SECRET } = process.env;\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "class AuthError extends Error {\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "  constructor() {\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "    super('Not authorized');\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "const getUserId = (context) => {\n",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const Authorization = context.request.get('Authorization');\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if (Authorization) {\n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    const token = Authorization.replace('Bearer ', '');\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    const { userId } = jwt.verify(token, APP_SECRET);\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "export const getUserId = (context) => {\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "  const authHeader = context.request.get('Authorization');\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if (authHeader) {\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "    const token = authHeader.replace('Bearer ', '');\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "    const { userId } = jwt.verify(token, JWT_SECRET);\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mprove-io/mprove/commit/d5cdc5b31ba58b58ca8d55c659a2745ea1dbd6b0?diff=split#diff-522ef23554ee4dc3509eaa4e20b1b14b666a42ef1e2802c053ccf1675c80917dL-1",
                    "lines": [
                      {
                        "line": "'MY_SECRET' // TODO: secret\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "process.env.BACKEND_JWT_SECRET\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/gnosis/conditional-markets-interface/commit/d5d7eb2839dc2f2f79052b9f76bb3c8e5c77fa7f?diff=split#diff-5f1179b38d94a75785290064a194e2fd668a28ccbb30b8784d1cc34bafeb35f6L-1",
                    "lines": [
                      {
                        "line": "require('dotenv').config();\n",
                        "lineNumber": 0,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "var HDWalletProvider = require(\"truffle-hdwallet-provider\");\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "const mnemonic = 'candy maple cake sugar pudding cream honey rich smooth crumble sweet treat';\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const seed = process.env.SEED || 'witch collapse practice feed shame open despair creek road again ice least' \n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 60,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "javascript/UseCsurfForExpress",
              "name": "UseCsurfForExpress",
              "shortDescription": {
                "text": "Cross-Site Request Forgery (CSRF)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "\n## Details\nCross-site request forgery is an attack in which a malicious third party takes advantage of a user's authenticated credentials (such as a browser cookie) to impersonate that trusted user and perform unauthorized actions. The web application server cannot tell the difference between legitimate and malicious requests. This type of attack generally begins by tricking the user with a social engineering attack, such as a link or popup that the user inadvertently clicks, causing an unauthorized request to be sent to the web server. Consequences vary: At a standard user level, attackers can change passwords, transfer funds, make purchases, or connect with contacts; from an administrator account, attackers can then make changes to or even take down the app itself.\n\n## Best practices for prevention\n* Use development frameworks that defend against CSRF, using a nonce, hash, or some other security device to the URL and/or to forms.\n* Implement secure, unique, hidden tokens that are checked by the server each time to validate state-change requests.\n* Never assume that authentication tokens and session identifiers mean a request is legitimate.\n* Understand and implement other safe-cookie techniques, such as double submit cookies.\n* Terminate user sessions when not in use, including automatic timeout.\n* Ensure rigorous coding practices and defenses against other commonly exploited CWEs, since cross-site scripting (XSS), for example, can be used to bypass defenses against CSRF.\n\n## References\n* [Snyk Learn - CSRF](https://learn.snyk.io/lesson/csrf-attack/)",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "UseCsurfForExpress",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/ruderngespra/socialnetwork/commit/06b5f8bd68460526666b4e3af546fa5150ab15b5?diff=split#diff-e727e4bdf3657fd1d798edcd6b099d6e092f8573cba266154583a746bba0f346L-1",
                    "lines": [
                      {
                        "line": "const app = express();\n",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "const compression = require(\"compression\");\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "const csurf = require(\"csurf\");\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(require(\"body-parser\").json());\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "    require(\"cookie-session\")({\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "        secret: \"I am nearly always happy.\",\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "        maxAge: 24 * 60 * 60 * 1000\n",
                        "lineNumber": 10,
                        "lineChange": "none"
                      },
                      {
                        "line": "    })\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": ");\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(csurf());\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 15,
                        "lineChange": "added"
                      },
                      {
                        "line": "app.use(function(req, res, next) {\n",
                        "lineNumber": 16,
                        "lineChange": "added"
                      },
                      {
                        "line": "    res.cookie(\"mytoken\", req.csrfToken());\n",
                        "lineNumber": 17,
                        "lineChange": "added"
                      },
                      {
                        "line": "    next();\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "});\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 20,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/bem-site/bem-forum/commit/fe91f3733daf1b0ccf726f4f9f2cfc007c9fbad7?diff=split#diff-bcb729747c92e72c12e4590f736a334041a572c429756da8af60b6ab89c6be79L-1",
                    "lines": [
                      {
                        "line": "    app = express();\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "if(util.isDev()) {\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "    app.use(require('enb/lib/server/server-middleware').createMiddleware({\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "        cdir: process.cwd(),\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "        noLog: false\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "    }));\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('port', process.env.PORT || config.port);\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "app\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .use(st(process.cwd()))\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .use(favicon(process.cwd() + '/public/favicon.ico'))\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "    .use(cookieParser()) //also is necessary for forum\n",
                        "lineNumber": 31,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    .use(bodyParser()) //also is necessary for forum\n",
                        "lineNumber": 32,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    .use(session({ secret: 'forum-session', saveUninitialized: true, resave: true }))\n",
                        "lineNumber": 33,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    .use(cookieParser())\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "    .use(bodyParser())\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      },
                      {
                        "line": "    .use(session({ secret: 'beminfoforum', saveUninitialized: false, resave: false }))\n",
                        "lineNumber": 33,
                        "lineChange": "added"
                      },
                      {
                        "line": "    .use(csrf())\n",
                        "lineNumber": 34,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/Shyam-Chen/Express-Starter/commit/9a98ac310f7a49dd97da4a4b7a53bfc74b0cc35e?diff=split#diff-c72a907ac323cd2f334ed0e2bd07d15ab62581c4753660c8a0d1c681b30be4b6L-1",
                    "lines": [
                      {
                        "line": "import csurf from 'csurf';\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "import connectRedis from 'connect-redis';\n",
                        "lineNumber": 11,
                        "lineChange": "none"
                      },
                      {
                        "line": "import rendertron from 'rendertron-middleware';\n",
                        "lineNumber": 12,
                        "lineChange": "none"
                      },
                      {
                        "line": "import history from 'express-history-api-fallback';\n",
                        "lineNumber": 13,
                        "lineChange": "none"
                      },
                      {
                        "line": "import Raven from 'raven';\n",
                        "lineNumber": 14,
                        "lineChange": "none"
                      },
                      {
                        "line": "import chalk from 'chalk';\n",
                        "lineNumber": 15,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 16,
                        "lineChange": "none"
                      },
                      {
                        "line": "import routes from '~/core/rest';\n",
                        "lineNumber": 17,
                        "lineChange": "none"
                      },
                      {
                        "line": "import apolloServer from '~/core/graphql';\n",
                        "lineNumber": 18,
                        "lineChange": "none"
                      },
                      {
                        "line": "import mongoose from '~/core/mongoose';\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      },
                      {
                        "line": "import sequelize from '~/core/sequelize';\n",
                        "lineNumber": 20,
                        "lineChange": "none"
                      },
                      {
                        "line": "import passport from '~/core/passport';\n",
                        "lineNumber": 21,
                        "lineChange": "none"
                      },
                      {
                        "line": "import redis from '~/core/redis';\n",
                        "lineNumber": 22,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 23,
                        "lineChange": "none"
                      },
                      {
                        "line": "import {\n",
                        "lineNumber": 24,
                        "lineChange": "none"
                      },
                      {
                        "line": "  NODE_ENV, PORT, HOST, SECRET,\n",
                        "lineNumber": 25,
                        "lineChange": "none"
                      },
                      {
                        "line": "  SENTRY_DSN, STATIC_FILES, RENDERTRON_URL,\n",
                        "lineNumber": 26,
                        "lineChange": "none"
                      },
                      {
                        "line": "} from './env';\n",
                        "lineNumber": 27,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 28,
                        "lineChange": "none"
                      },
                      {
                        "line": "const app = express();\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "const server = http.Server(app);\n",
                        "lineNumber": 30,
                        "lineChange": "none"
                      },
                      {
                        "line": "const io = socket(server);\n",
                        "lineNumber": 31,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 32,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.set('socket', io);\n",
                        "lineNumber": 33,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 34,
                        "lineChange": "none"
                      },
                      {
                        "line": "if (NODE_ENV === 'production') Raven.config(SENTRY_DSN).install();\n",
                        "lineNumber": 35,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 36,
                        "lineChange": "none"
                      },
                      {
                        "line": "/**\n",
                        "lineNumber": 37,
                        "lineChange": "none"
                      },
                      {
                        "line": " * @name middleware-functions\n",
                        "lineNumber": 38,
                        "lineChange": "none"
                      },
                      {
                        "line": " */\n",
                        "lineNumber": 39,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(helmet());\n",
                        "lineNumber": 40,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(cors());\n",
                        "lineNumber": 41,
                        "lineChange": "none"
                      },
                      {
                        "line": "// app.use(csurf());\n",
                        "lineNumber": 42,
                        "lineChange": "none"
                      },
                      {
                        "line": "// app.use(rateLimit({ windowMs: 15 * 60 * 1000, max: 100 }));\n",
                        "lineNumber": 43,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(compression());\n",
                        "lineNumber": 44,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(morgan('tiny'));\n",
                        "lineNumber": 45,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(express.json());\n",
                        "lineNumber": 46,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(express.urlencoded({ extended: false }));\n",
                        "lineNumber": 47,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(session({\n",
                        "lineNumber": 48,
                        "lineChange": "none"
                      },
                      {
                        "line": "  store: new (connectRedis(session))({ client: redis }),\n",
                        "lineNumber": 49,
                        "lineChange": "none"
                      },
                      {
                        "line": "  name: 'sid',\n",
                        "lineNumber": 50,
                        "lineChange": "none"
                      },
                      {
                        "line": "  resave: true,\n",
                        "lineNumber": 51,
                        "lineChange": "none"
                      },
                      {
                        "line": "  saveUninitialized: true,\n",
                        "lineNumber": 52,
                        "lineChange": "none"
                      },
                      {
                        "line": "  secret: SECRET,\n",
                        "lineNumber": 53,
                        "lineChange": "none"
                      },
                      {
                        "line": "}));\n",
                        "lineNumber": 54,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(passport.initialize());\n",
                        "lineNumber": 55,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(passport.session());\n",
                        "lineNumber": 56,
                        "lineChange": "none"
                      },
                      {
                        "line": "app.use(csurf());\n",
                        "lineNumber": 56,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 66,
                "cwe": [
                  "CWE-352"
                ]
              }
            },
            {
              "id": "javascript/InsecureHash",
              "name": "InsecureHash",
              "shortDescription": {
                "text": "Use of Password Hash With Insufficient Computational Effort"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\n\nSensitive information should never be stored in plain text, since this makes it very easy for unauthorized users, whether malicious insiders or outside attackers, to access. Hashing methods are used to make stored passwords and other sensitive data unreadable to users. For example, when a password is defined for the first time, it is hashed and then stored. The next time that user attempts to log on, the password they enter is hashed following the same procedure and compared with the stored value. In this way, the original password never needs to be stored in the system.\n\nHashing is a one-way scheme, meaning a hashed password cannot be reverse engineered. However, if an outdated or custom programmed hashing scheme is used, it becomes simple for an attacker with powerful modern computing power to gain access to the hashes used. This opens up access to all stored password information, leading to breached security. Therefore, it is essential for developers to understand modern, secure password hashing techniques.\n\n## Best practices for prevention\n* Use strong standard algorithms for hashing rather than simpler but outdated methods or DIY hashing schemes, which may have inherent weaknesses.\n* Use modular design for all code dealing with hashing so it can be swapped out as security standards change over time.\n* Use salting in combination with hashing (While this places more demands on resources, it is an essential step for tighter security.).\n* Implement zero-trust architecture to ensure that access to password data is granted only for legitimate business purposes.\n* Increase developer awareness of current standards in data security and cryptography.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "InsecureHash",
                  "Security"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/steilerDev/homebridge-openhab2-complete/commit/6e92ef40f991cc372b701390945e0e5bbeb71016?diff=split#diff-34bbd467b1ab0e3497ce244b09d2bfbc4ab192303dd90b13603baf6711b522dfL-1",
                    "lines": [
                      {
                        "line": "function generate(name) {\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    const sha1sum = crypto.createHash('sha1');\n",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    sha1sum.update(name);\n",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "function generate(name, type) {\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "    const hash = crypto.createHash('sha512');\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      },
                      {
                        "line": "    hash.update(name);\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "    hash.update(type);\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/raphael-group/magi/commit/1e1ed6435a97858e38d0cab962d7e248710f60e1?diff=split#diff-a4bd8e7c606b00ad2f2d6eeb95ba96714ece5c8b1266c2b503f3531b12d46257L-1",
                    "lines": [
                      {
                        "line": "hasher = crypto.createHash('md5').update(url),\n",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "hasher = crypto.createHash('RIPEMD-64').update(url),\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mafintosh/hyperlog/commit/d93cc65e485d740face1dacffa66dbcf03bcc7c3?diff=split#diff-b29a862e995b5e16d1763a35604cec4f13f3ca08bb9318d8f7ccfa24b757f7e0L-1",
                    "lines": [
                      {
                        "line": "return crypto.createHash('sha1')\n",
                        "lineNumber": 3,
                        "lineChange": "removed"
                      },
                      {
                        "line": "return crypto.createHash('sha256')\n",
                        "lineNumber": 3,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 52,
                "cwe": [
                  "CWE-916"
                ]
              }
            },
            {
              "id": "javascript/Sqli",
              "name": "Sqli",
              "shortDescription": {
                "text": "SQL Injection"
              },
              "defaultConfiguration": {
                "level": "error"
              },
              "help": {
                "markdown": "## Details\n\nIn an SQL injection attack, the user can submit an SQL query directly to the database, gaining access without providing appropriate credentials. Attackers can then view, export, modify, and delete confidential information; change passwords and other authentication information; and possibly gain access to other systems within the network. This is one of the most commonly exploited categories of vulnerability, but can largely be avoided through good coding practices.\n\n## Best practices for prevention\n* Avoid passing user-entered parameters directly to the SQL server.\n* Avoid using string concatenation to build SQL queries from user-entered parameters.\n* When coding, define SQL code first, then pass in parameters. Use prepared statements with parameterized queries. Examples include `SqlCommand()` in .NET and `bindParam()` in PHP.\n* Use strong typing for all parameters so unexpected user data will be rejected.\n* Where direct user input cannot be avoided for performance reasons, validate input against a very strict allowlist of permitted characters, avoiding special characters such as `? & / < > ; - ' \" \\` and spaces. Use a vendor-supplied escaping routine if possible.\n* Develop your application in an environment and/or using libraries that provide protection against SQL injection.\n* Harden your entire environment around a least-privilege model, ideally with isolated accounts with privileges only for particular tasks.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "Sqli",
                  "Security",
                  "SourceServer",
                  "SourceHttpParam",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/markusenglund/react-kanban/commit/fa75ddf0823ec61299ceef36accf68cf13ed4dfa?diff=split#diff-bcac56cb4bb77b764eba32cf65a0491a6ce3c7730f212156339654c63d4d0ba9L-1",
                    "lines": [
                      {
                        "line": "const { connection } = req;\n",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const { listId, listTitle, listIndex, boardId } = req.body;\n",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "console.log(listTitle);\n",
                        "lineNumber": 7,
                        "lineChange": "removed"
                      },
                      {
                        "line": "connection.query(\n",
                        "lineNumber": 8,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  `INSERT INTO lists (list_id, list_title, list_order, board_id)\n",
                        "lineNumber": 9,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    VALUES ('${listId}', '${listTitle}', '${listIndex}','${boardId}')`,\n",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  (error, result) => {\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    if (error) {\n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "      res.send({ success: false });\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    }\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    console.log(result);\n",
                        "lineNumber": 15,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    res.send({ success: true });\n",
                        "lineNumber": 16,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  }\n",
                        "lineNumber": 17,
                        "lineChange": "removed"
                      },
                      {
                        "line": ");\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const { listId, listTitle, boardId } = req.body;\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      },
                      {
                        "line": "  db\n",
                        "lineNumber": 7,
                        "lineChange": "added"
                      },
                      {
                        "line": "    .collection(\"boards\")\n",
                        "lineNumber": 8,
                        "lineChange": "added"
                      },
                      {
                        "line": "    .updateOne(\n",
                        "lineNumber": 9,
                        "lineChange": "added"
                      },
                      {
                        "line": "      { _id: boardId },\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "      { $push: { lists: { _id: listId, title: listTitle, cards: [] } } }\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "    )\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "    .then(result => res.send(result));\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/votinginfoproject/Metis/commit/a23a825a5240c28b308e51d5deced8c079483b4f?diff=split#diff-8a2ec056bc0d1ea7f81af8911eb5ed800ceb6e06ef7200bcb240e850660cc698L-1",
                    "lines": [
                      {
                        "line": "var query = client.query(\"SELECT * FROM results WHERE id=\" + req.query.id);\n",
                        "lineNumber": 6,
                        "lineChange": "removed"
                      },
                      {
                        "line": "var query = client.query(\"SELECT * FROM results WHERE id=$1\", [req.query.id]);\n",
                        "lineNumber": 6,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/ZeroWangZY/track-manager/commit/28b85bf6f67cfd03d6af40f35df3e9a7b21bfcd4?diff=split#diff-4271b7f8a97f7103b3b137c344e4cfe49d6bb92646f2fd31bfdba91220b45f3aL-1",
                    "lines": [
                      {
                        "line": "            connection.query('call gethotpoints(\\''+param.starttime+'\\',\\''+param.endtime+'\\')', function(err, result) {\n",
                        "lineNumber": 127,
                        "lineChange": "removed"
                      },
                      {
                        "line": "          //  connection.query('call gethotpoints(\\''+param.starttime+'\\',\\''+param.endtime+'\\')', function(err, result) {\n",
                        "lineNumber": 127,
                        "lineChange": "added"
                      },
                      {
                        "line": "            connection.query('select Longtitude,Latitude from minitrack where Taxiid<10', function(err, result) {\n",
                        "lineNumber": 128,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 129,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 42,
                "cwe": [
                  "CWE-89"
                ]
              }
            },
            {
              "id": "javascript/HardcodedSecret/test",
              "name": "HardcodedSecret/test",
              "shortDescription": {
                "text": "Hardcoded Secret"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "## Details\n\nWhen constants are hardcoded into applications, this information could easily be reverse-engineered and become known to attackers. For example, if a breached authentication token is hardcoded in multiple places in the application, it may lead to components of the application remaining vulnerable if not all instances are changed.\nAnother negative effect of hard-coding constants is potential unpredictability in the application's performance if the development team fails to update every single instance of the hardcoded constant throughout the code. For these reasons, hard-coding security-relevant constants is considered bad coding practice and should be remedied if present and avoided in future.\n\n## Best practices for prevention\n- Never hard code security-related constants; use symbolic names or configuration lookup files.\n- As hard coding is often done by coders working alone on a small scale, examine all legacy code components and test carefully when scaling.\n- Adopt a \"future-proof code\" mindset: While use of constants may save a little time now and make development simpler in the short term, it could cost time and money adapting to scale or other unforeseen circumstances (such as new hardware) in the future.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "HardcodedSecret",
                  "Security",
                  "InTest"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/dooboolab/talktalk-node/commit/f1824b890376c8b5a4362682d4112d42334d9db3?diff=split#diff-3274f1a37032fb0ae4e2823def0007c634e869ae0dfc304ff6a12c36513c3a52L-1",
                    "lines": [
                      {
                        "line": "import jwt, { verify } from 'jsonwebtoken';\n",
                        "lineNumber": 0,
                        "lineChange": "removed"
                      },
                      {
                        "line": "import jwt from 'jsonwebtoken';\n",
                        "lineNumber": 0,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 1,
                        "lineChange": "none"
                      },
                      {
                        "line": "const APP_SECRET = 'REACT NATIVE SEOUL - DOOBOOLAB';\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const { JWT_SECRET } = process.env;\n",
                        "lineNumber": 2,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "class AuthError extends Error {\n",
                        "lineNumber": 4,
                        "lineChange": "none"
                      },
                      {
                        "line": "  constructor() {\n",
                        "lineNumber": 5,
                        "lineChange": "none"
                      },
                      {
                        "line": "    super('Not authorized');\n",
                        "lineNumber": 6,
                        "lineChange": "none"
                      },
                      {
                        "line": "  }\n",
                        "lineNumber": 7,
                        "lineChange": "none"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 8,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 9,
                        "lineChange": "none"
                      },
                      {
                        "line": "const getUserId = (context) => {\n",
                        "lineNumber": 10,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  const Authorization = context.request.get('Authorization');\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  if (Authorization) {\n",
                        "lineNumber": 12,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    const token = Authorization.replace('Bearer ', '');\n",
                        "lineNumber": 13,
                        "lineChange": "removed"
                      },
                      {
                        "line": "    const { userId } = jwt.verify(token, APP_SECRET);\n",
                        "lineNumber": 14,
                        "lineChange": "removed"
                      },
                      {
                        "line": "export const getUserId = (context) => {\n",
                        "lineNumber": 10,
                        "lineChange": "added"
                      },
                      {
                        "line": "  const authHeader = context.request.get('Authorization');\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      },
                      {
                        "line": "  if (authHeader) {\n",
                        "lineNumber": 12,
                        "lineChange": "added"
                      },
                      {
                        "line": "    const token = authHeader.replace('Bearer ', '');\n",
                        "lineNumber": 13,
                        "lineChange": "added"
                      },
                      {
                        "line": "    const { userId } = jwt.verify(token, JWT_SECRET);\n",
                        "lineNumber": 14,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/mprove-io/mprove/commit/d5cdc5b31ba58b58ca8d55c659a2745ea1dbd6b0?diff=split#diff-522ef23554ee4dc3509eaa4e20b1b14b666a42ef1e2802c053ccf1675c80917dL-1",
                    "lines": [
                      {
                        "line": "'MY_SECRET' // TODO: secret\n",
                        "lineNumber": 11,
                        "lineChange": "removed"
                      },
                      {
                        "line": "process.env.BACKEND_JWT_SECRET\n",
                        "lineNumber": 11,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/gnosis/conditional-markets-interface/commit/d5d7eb2839dc2f2f79052b9f76bb3c8e5c77fa7f?diff=split#diff-5f1179b38d94a75785290064a194e2fd668a28ccbb30b8784d1cc34bafeb35f6L-1",
                    "lines": [
                      {
                        "line": "require('dotenv').config();\n",
                        "lineNumber": 0,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 1,
                        "lineChange": "added"
                      },
                      {
                        "line": "var HDWalletProvider = require(\"truffle-hdwallet-provider\");\n",
                        "lineNumber": 2,
                        "lineChange": "none"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 3,
                        "lineChange": "none"
                      },
                      {
                        "line": "const mnemonic = 'candy maple cake sugar pudding cream honey rich smooth crumble sweet treat';\n",
                        "lineNumber": 2,
                        "lineChange": "removed"
                      },
                      {
                        "line": "const seed = process.env.SEED || 'witch collapse practice feed shame open despair creek road again ice least' \n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 60,
                "cwe": [
                  "CWE-547"
                ]
              }
            },
            {
              "id": "javascript/XSS",
              "name": "XSS",
              "shortDescription": {
                "text": "Cross-site Scripting (XSS)"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "help": {
                "markdown": "## Details\n\nA cross-site scripting attack occurs when the attacker tricks a legitimate web-based application or site to accept a request as originating from a trusted source.\n\nThis is done by escaping the context of the web application; the web application then delivers that data to its users along with other trusted dynamic content, without validating it. The browser unknowingly executes malicious script on the client side (through client-side languages; usually JavaScript or HTML)  in order to perform actions that are otherwise typically blocked by the browser's Same Origin Policy.\n\nInjecting malicious code is the most prevalent manner by which XSS is exploited; for this reason, escaping characters in order to prevent this manipulation is the top method for securing code against this vulnerability.\n\nEscaping means that the application is coded to mark key characters, and particularly key characters included in user input, to prevent those characters from being interpreted in a dangerous context. For example, in HTML, `<` can be coded as  `&lt`; and `>` can be coded as `&gt`; in order to be interpreted and displayed as themselves in text, while within the code itself, they are used for HTML tags. If malicious content is injected into an application that escapes special characters and that malicious content uses `<` and `>` as HTML tags, those characters are nonetheless not interpreted as HTML tags by the browser if they've been correctly escaped in the application code and in this way the attempted attack is diverted.\n\nThe most prominent use of XSS is to steal cookies (source: OWASP HttpOnly) and hijack user sessions, but XSS exploits have been used to expose sensitive information, enable access to privileged services and functionality and deliver malware.\n\n### Types of attacks\nThere are a few methods by which XSS can be manipulated:\n\n|Type|Origin|Description|\n|--|--|--|\n|**Stored**|Server|The malicious code is inserted in the application (usually as a link) by the attacker. The code is activated every time a user clicks the link.|\n|**Reflected**|Server|The attacker delivers a malicious link externally from the vulnerable web site application to a user. When clicked, malicious code is sent to the vulnerable web site, which reflects the attack back to the user's browser.|\n|**DOM-based**|Client|The attacker forces the user's browser to render a malicious page. The data in the page itself delivers the cross-site scripting data.|\n|**Mutated**| |The attacker injects code that appears safe, but is then rewritten and modified by the browser, while parsing the markup. An example is rebalancing unclosed quotation marks or even adding quotation marks to unquoted parameters.|\n\n### Affected environments\nThe following environments are susceptible to an XSS attack:\n\n* Web servers\n* Application servers\n* Web application environments\n\n## Best practices for prevention\nThis section describes the top best practices designed to specifically protect your code:\n\n* Sanitize data input in an HTTP request before reflecting it back, ensuring all data is validated, filtered or escaped before echoing anything back to the user, such as the values of query parameters during searches.\n* Convert special characters such as `?`, `&`, `/`, `<`, `>` and spaces to their respective HTML or URL encoded equivalents.\n* Give users the option to disable client-side scripts.\n* Redirect invalid requests.\n* Detect simultaneous logins, including those from two separate IP addresses, and invalidate those sessions.\n* Use and enforce a Content Security Policy (source: Wikipedia) to disable any features that might be manipulated for an XSS attack.\n* Read the documentation for any of the libraries referenced in your code to understand which elements allow for embedded HTML.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "XSS",
                  "Security",
                  "SourceResourceAccess",
                  "SourceNetworkRequest",
                  "Taint"
                ],
                "categories": [
                  "Security"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/mockyeah/mockyeah/commit/24e0243bfde18396637ba0bfca681c2cf2d2be33?diff=split#diff-8fef0ae737443178f9c7da5682af7782959b12df701f054731a31e4238049341L-1",
                    "lines": [
                      {
                        "line": "mockyeah.post('/', (req, res) => {\n",
                        "lineNumber": 4,
                        "lineChange": "removed"
                      },
                      {
                        "line": "  res.send(req.body.hey);\n",
                        "lineNumber": 5,
                        "lineChange": "removed"
                      },
                      {
                        "line": "mockyeah.post('/', {\n",
                        "lineNumber": 4,
                        "lineChange": "added"
                      },
                      {
                        "line": "  text: req => req.body.hey\n",
                        "lineNumber": 5,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/spmjs/spmjs.io/commit/7ef27fc5ab515b9b7b2ed55b5797d87f78c027e4?diff=split#diff-494245839b096ba21695a9461e8c619198001b9ecd9d129c5c9af193ae9d67fbL-1",
                    "lines": [
                      {
                        "line": "res.set('Content-Type', 'application/json');\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      },
                      {
                        "line": "res.send(JSON.stringify(p));\n",
                        "lineNumber": 19,
                        "lineChange": "none"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/MROS/infinite-city/commit/e44f362054f1d95d6e266d6448cc333b5564c87d?diff=split#diff-2fe53c2b142a276b20739b3145462cc926666764b0a5b4fcd1605be1d316e4d2L-1",
                    "lines": [
                      {
                        "line": "res.status(400).send(err.message);\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": "res.status(400).send(\"FAIL\");\n",
                        "lineNumber": 19,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 141,
                "cwe": [
                  "CWE-79"
                ]
              }
            },
            {
              "id": "javascript/Ssrf/test",
              "name": "Ssrf/test",
              "shortDescription": {
                "text": "Server-Side Request Forgery (SSRF)"
              },
              "defaultConfiguration": {
                "level": "note"
              },
              "help": {
                "markdown": "\n## Details\nIn a server-side request forgery attack, a malicious user supplies a URL (an external URL or a network IP address such as 127.0.0.1) to the application's back end. The server then accesses the URL and shares its results, which may include sensitive information such as AWS metadata, internal configuration information, or database contents with the attacker. Because the request comes from the back end, it bypasses access controls, potentially exposing information the user does not have sufficient privileges to receive. The attacker can then exploit this information to gain access, modify the web application, or demand a ransom payment.\n\n## Best practices for prevention\n* Blacklists are problematic and attackers have numerous ways to bypass them; ideally, use a whitelist of all permitted domains and IP addresses.\n* Use authentication even within your own network to prevent exploitation of server-side requests.\n* Implement zero trust and sanitize and validate all URL and header data returning to the server from the user. Strip invalid or suspect characters, then inspect to be certain it contains a valid and expected value.\n* Ideally, avoid sending server requests based on user-provided data altogether.\n* Ensure that you are not sending raw response bodies from the server directly to the client. Only deliver expected responses.\n* Disable suspect and exploitable URL schemas. Common culprits include obscure and little-used schemas such as `file://`, `dict://`, `ftp://`, and `gopher://`.",
                "text": ""
              },
              "properties": {
                "tags": [
                  "javascript",
                  "Ssrf",
                  "Security",
                  "InTest",
                  "SourceServer",
                  "SourceRequestUrl",
                  "Taint"
                ],
                "categories": [
                  "Security",
                  "InTest"
                ],
                "exampleCommitFixes": [
                  {
                    "commitURL": "https://github.com/avwo/whistle/commit/0c9040949567d7154a320b0a4a6ed45f85693cbb?diff=split#diff-92bbac9a308cd5fcf9db165841f2d90ce981baddcb2b1e26cfff170929af3bd1L-1",
                    "lines": [
                      {
                        "line": "\n",
                        "lineNumber": 61,
                        "lineChange": "removed"
                      },
                      {
                        "line": "resSocket = net.connect(options.port, ip, function() {\n",
                        "lineNumber": 62,
                        "lineChange": "removed"
                      },
                      {
                        "line": "//TODO\n",
                        "lineNumber": 61,
                        "lineChange": "added"
                      },
                      {
                        "line": "resSocket = net.connect(config.dispatcherport, '127.0.0.1', function() {\n",
                        "lineNumber": 62,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/wellcometrust/wellcomecollection.org/commit/2399266a906b6573c32a18afacb7ef3a04cf61f6?diff=split#diff-d347091b60673886a3f7f9f7eaf7e970812f0fc22217d00b234df8266f46199dL-1",
                    "lines": [
                      {
                        "line": "if (uri.match('https://iiif.wellcomecollection.org')) {\n",
                        "lineNumber": 28,
                        "lineChange": "added"
                      },
                      {
                        "line": "  ctx.body = request(uri);\n",
                        "lineNumber": 29,
                        "lineChange": "none"
                      },
                      {
                        "line": "} else {\n",
                        "lineNumber": 30,
                        "lineChange": "added"
                      },
                      {
                        "line": "  ctx.throw('Invalid image host', 422);\n",
                        "lineNumber": 31,
                        "lineChange": "added"
                      },
                      {
                        "line": "}\n",
                        "lineNumber": 32,
                        "lineChange": "added"
                      }
                    ]
                  },
                  {
                    "commitURL": "https://github.com/BuilderIO/builder/commit/8078e84282e4a402887bc66d155cd03f5a31cab0?diff=split#diff-d21e0f2e1c40701c32ca79ab19e978bba8a7841137c20be48b2ece020c00aa7aL-1",
                    "lines": [
                      {
                        "line": ".get(`https://cdn.builder.io/api/v1/html/page?url=${req.path}&apiKey=${builderApiKey}`)\n",
                        "lineNumber": 18,
                        "lineChange": "removed"
                      },
                      {
                        "line": ".get(`https://cdn.builder.io/api/v1/html/page?url=${encodeURI(req.url)}&apiKey=${builderApiKey}`)\n",
                        "lineNumber": 18,
                        "lineChange": "added"
                      }
                    ]
                  }
                ],
                "exampleCommitDescriptions": [],
                "precision": "very-high",
                "repoDatasetSize": 40,
                "cwe": [
                  "CWE-918"
                ]
              }
            }
          ]
        }
      },
      "results": [
        {
          "ruleId": "javascript/ZipSlip",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "Unsanitized input from Unzipper library flows into fs.createWriteStream, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path after been extracted from a zip file. This may result in a Zip Slip vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[Unzipper library](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[fs.createWriteStream](9)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/fileUpload.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 49,
                  "startColumn": 30,
                  "endColumn": 50
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4adc7114ee3ba404f385b7afd529ec2a4f455ac65eb679c93c91da4bce8f9891",
            "1": "bfc007a1.70dd3b3b.568208f0.7da15f0a.ef9f7d82.d9a6604d.6f89b54d.23a616eb.08593d42.349fbb8f.271a59f1.500afa7a.055de38a.d9a6604d.83265159.ef6bffc1",
            "identity": "f9da4ea8-9a04-425c-a8a5-e8ef01b8aaca"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 21,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 21,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 43,
                            "endLine": 43,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 44,
                            "endLine": 44,
                            "startColumn": 38,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 34,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 23,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 75,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 75,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 51,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/fileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 30,
                            "endColumn": 50
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 751,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          },
          "suppressions": [
            {
              "justification": "Discussion on 2024-12-16",
              "properties": {
                "category": "not-vulnerable",
                "expiration": "2025-12-16T08:00:00Z",
                "ignoredOn": "2024-12-16T17:29:22.609Z",
                "ignoredBy": {
                  "name": "Ezra",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "startColumn": 32,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0ccc52a34891190cf257019c24bed18ca1a91fdc631829bc8774f289e0ed1d82",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.10d85176.83265159.2ae8f124.99d9a5e9.4773f344.bd65d204.e052b9a9.79a7d027.10d85176.83265159.2ae8f124",
            "identity": "7e3e3687-697a-49ec-b022-d33a20fe0381"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dd97048085230c2adc84ef811af3ff12ee8a70f42dd670092892f8576c40a613",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2ae8f124.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2ae8f124",
            "identity": "6b796c18-89d4-481c-a951-72c064cc108e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e1c572ed0599e75d8d1be3289ebf8adc0a8912c092f47a945fb2c83a8f870867",
            "1": "c58eebe7.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.4155dca9.837e6975.c58eebe7.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.4155dca9.837e6975",
            "identity": "c7c3ee9c-e61a-4b0b-a3f9-f5349b16ff13"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 70,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d09bbd8f166ce14c179fc5601b635621e33a9aa9534b390688faa9faee9d376d",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba",
            "identity": "885ff7db-2201-47dd-a867-2c3b073d28f4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 88,
                  "endLine": 88,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "eb27b5cf6c3bde7b14c7246f87594a865e7951ef5e18dc3d6c0011a249b7fa02",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0",
            "identity": "ca8b7dac-c9fd-46cc-831c-3cc727fdb355"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 104,
                  "endLine": 104,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7e354531d8a3673c58ff8465d70bee6d9bfaf3b5770de57553bb7d2a786c382e",
            "1": "99d9a5e9.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2ae8f124.99d9a5e9.4773f344.bd65d204.e052b9a9.79a7d027.10d85176.ce4a9d89.2ae8f124",
            "identity": "1f2acf18-800b-45be-9e7b-4ba10d68782f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 127,
                  "endLine": 127,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "936a925543b6be477648268e289a2dd2862a7fff3c2ef7ec62753988e9870174",
            "1": "99d9a5e9.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2ae8f124.99d9a5e9.4773f344.bd65d204.e052b9a9.79a7d027.10d85176.ce4a9d89.2ae8f124",
            "identity": "6000da32-e92d-4c43-b729-c90d17ab9d5a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 127,
                            "endLine": 127,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 146,
                  "endLine": 146,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3208da4ef65ce9de98d0bf9b3898bad3278fff24b9f07efdc832d170a842ed1b",
            "1": "c58eebe7.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.4155dca9.837e6975.c58eebe7.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.4155dca9.837e6975",
            "identity": "9475d46b-8425-4962-9459-ebcfa074f505"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 146,
                            "endLine": 146,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 167,
                  "endLine": 167,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6b2df92f1e6853414f8f56c80bc063eb7a4749d7375c9f9396f8e4f1fa16a9a5",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba",
            "identity": "d07ff9bc-e3c1-4882-a409-9905f765f6f3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 167,
                            "endLine": 167,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deluxeApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 188,
                  "endLine": 188,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b40d48265c544c0c72c85aec27e9923127a6d79de602512d820834834b7ef267",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0",
            "identity": "b8456d56-a6f2-47cc-a9e3-21567c03b610"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deluxeApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 188,
                            "endLine": 188,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/walletApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "55bb88660070c7b26eabdce2e2bb192af7f535a582fec1697c80fa39b32aa5d8",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "b8c1d1f1-2769-4da1-8e15-b3c68efd622e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/walletApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 416,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/addressApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e8c085ae8be3a8fa0a76c86d2813bcfc1d77e3a69d6294e5e9aca6d8812caa48",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "0757f154-1232-425e-9710-738b093a5b39"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/addressApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 416,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f0f67c54d24b7d16be7f088ba3b2714c3ca124040e48af3ab1521159124ca5f5",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.b02f6b31.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.b02f6b31",
            "identity": "3333bd4e-033c-45c0-bc89-bc3c9bcf248a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 36,
                  "startColumn": 13,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "25455e1cd255bcc21afa1d9330864e349c210ef2b9444d6e239059edddbc42f0",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.b02f6b31.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.b02f6b31",
            "identity": "79c3eabc-bfea-4b76-b901-1b7cd4aa3f9e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cf174c558b72c9f0136f3387fc5936da7fadeb43943bef01fa04eae0ad4dabe2",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.6844341c.ce4a9d89.c53476bb.12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.6844341c.ce4a9d89.c53476bb",
            "identity": "afd0d586-7353-4322-b25a-545eec1fc47e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 70,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d60e8da8d39191acb1dd4c7bb818a294230754bdee57d279aca243f998f630f4",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba",
            "identity": "da34d665-e5c2-40dd-835e-4e6a9213ed66"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 70,
                            "endLine": 70,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 85,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "91c4fbdb03bf02f845401ab74627d3b8eb65d16b290d9e94332940601d9e4506",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.3f6129a0.8ff1ad11.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.3f6129a0.8ff1ad11",
            "identity": "046eec05-79ad-44e1-91a4-8098bd72480e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 100,
                  "endLine": 100,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7f632e0f291d7bbcf7b2192c0d454d05f53a4ee4c72173fb3010def4de067234",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.10f2eeef.d9612bd8.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.10f2eeef.d9612bd8",
            "identity": "f5cb37e7-9cce-467a-8185-e2fa3bfcc7ae"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 115,
                  "endLine": 115,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9284a13738d69f7f906b0e7d45502d1c5eb2f5372c1d68bcc383d040c247f37d",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.837e6975.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.837e6975",
            "identity": "549361d0-96ed-40ae-83c9-79c33fc088b0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 115,
                            "endLine": 115,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 130,
                  "endLine": 130,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9bf1a5180cd7cb538d5c4370d93055c99b82b4ad54696ad07259a4f446d49062",
            "1": "01e8e257.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.9add11d4.01e8e257.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.9add11d4",
            "identity": "ff13ab67-1b93-4e50-92bb-83e957c40018"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 130,
                            "endLine": 130,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 148,
                  "endLine": 148,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ae78388a2587f6ebb0804466b30bdfd2e2e950c7c12b71257b81215f2389a8c4",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb",
            "identity": "8f2554f7-7761-4fe4-9a2b-76e6b14c8614"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 249,
                  "endLine": 249,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "733e7e07d7fc77695340bf6b86a9df76af988b708784b403eb92106528434380",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba",
            "identity": "9e860dce-bb7d-4e87-b04c-e9cceb46f6d3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 249,
                            "endLine": 249,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 265,
                  "endLine": 265,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "52bc90b766c9e3b79a45361475829925a48293e11b58b451d2a11c7d9b364123",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb",
            "identity": "6571791b-967b-43ce-91cc-40bc962f5ec3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 265,
                            "endLine": 265,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/loginApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 286,
                  "endLine": 286,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4d3cfbee94ba34b84384c76a20733fc1f5d2a302d25d1e6fe0a2ed01db1998d6",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb",
            "identity": "6136b304-ae14-4f24-8bec-37e270bb6d5e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/loginApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 286,
                            "endLine": 286,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/registerSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 96,
                  "startColumn": 61,
                  "endColumn": 69
                }
              }
            }
          ],
          "fingerprints": {
            "0": "72d7fc8f1dfa068a57696da16493c22d427622dd12bee639ec3a7e89eaae3549",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2c8e0fc2.12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2c8e0fc2",
            "identity": "5a141ab0-9459-4a22-ae8a-cf6ac9fdf54b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/registerSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 61,
                            "endColumn": 69
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/paymentApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ab57ef4b9eb8c7366f2344a2700417e9b0a58d25474b474c4f097ab6c6f49ae2",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "bdd23c42-01da-4a94-b511-fcf7ad424259"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/paymentApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 416,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deliveryApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "66d8c0cd7ecb3f53677f045bcf2c5df834e777e398b7550c09dc959f3ee34406",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "f03cc8c5-ab68-4c74-ad81-384e588f567a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deliveryApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deliveryApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 51,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "016e3084c6966f3eb767686b243132ea62418f508aa0a66b4b3a8e524ccfdb46",
            "1": "c58eebe7.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.4155dca9.837e6975.c58eebe7.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.4155dca9.837e6975",
            "identity": "a54a4ace-ab61-4fe4-8a5c-d913218859e2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deliveryApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deliveryApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 82,
                  "endLine": 82,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6fd7ea0b9c23f72cd3e9bea7d608e6e32a4cd4de107a7fbec0ddc14d5a1377ec",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "a3dd16e0-9cb7-49e5-9887-6c5d60dbc503"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deliveryApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 82,
                            "endLine": 82,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/deliveryApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 110,
                  "endLine": 110,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ec36ce61cad5197157e350ff7d8920e2ff6d41c57aaf571fda55f29ccefe220f",
            "1": "c58eebe7.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.4155dca9.837e6975.c58eebe7.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.4155dca9.837e6975",
            "identity": "46fe2d55-8646-48f0-8779-7c6ecb515860"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/deliveryApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 110,
                            "endLine": 110,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9db04f29cf937153b3392fcacfd6b31cae2143ef440ab19576b9da790160e78f",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb",
            "identity": "848923e5-8b78-43d5-8d0d-ef6a18e2ff76"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2b0ce9491fcf8020b5dffb1e299ccf4deb397f61e97d048db15b9f419eece65d",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb",
            "identity": "68ab8852-fd1d-49af-881e-ed0d8cbcfc70"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 76,
                  "endLine": 76,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "90c4fcc4b9b4cc7834bb2035b55abf68a22b4f6046bd78fdf277c2386d40ced4",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb",
            "identity": "e3fc2d09-a82a-42ad-8842-f42f2cc65764"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 76,
                            "endLine": 76,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 111,
                  "endLine": 111,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "6df4f2e55be340ad33ae0384a2f3d70d395a682377303eade17183e1ab64a980",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.837e6975.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.837e6975",
            "identity": "d7db839d-186e-4138-b80f-5f6f65f7e8bf"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 111,
                            "endLine": 111,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 151,
                  "endLine": 151,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1ea2e6c0ff785653c15b28e487c2a7ffbbd5743efb6e27df8a5770de6deb2403",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "41b24b32-a2e5-40ef-bf10-6a78b8fb3511"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 151,
                            "endLine": 151,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 193,
                  "endLine": 193,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d1b6d26dabf37e6bc7c5552e95ab5eb830b7d25e25f7f301f7f63f705a117190",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "9f3ea868-a959-464b-a9d7-042d883d6218"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 193,
                            "endLine": 193,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 232,
                  "endLine": 232,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "92f40c4d07d1b0fc56462d88a54a53be2120a4bba5cac1663a2aa25c81e77248",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.837e6975.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.837e6975",
            "identity": "172fa819-ba27-4eba-8466-413ac4a2da55"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 232,
                            "endLine": 232,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 280,
                  "endLine": 280,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0628faa7fb5acd9e3e7558790e4a19095f5d4b3fbe7d53b4882c24e7c15b5f49",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "21dd99cb-3709-4457-8b05-baca1cace474"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 280,
                            "endLine": 280,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/dataExportApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 330,
                  "endLine": 330,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5788bea0ad5559d5838941b1765154f463d4dc74f86cafcee15cd498a88ec8bf",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "3aabef3a-f703-4031-9095-eea0a09018fe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/dataExportApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 330,
                            "endLine": 330,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/loginSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 161,
                  "endLine": 161,
                  "startColumn": 65,
                  "endColumn": 73
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ebc2451a45bb1ccf14abcf6ad75534b2eb75d0eb7ca138346c2272f852297708",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba",
            "identity": "1f62dbf2-1ccb-4f6a-9ed1-a1f4ff5cabd5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/loginSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 161,
                            "endLine": 161,
                            "startColumn": 65,
                            "endColumn": 73
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 416,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/basketApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 24,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f5933eeba29eac8765b67f66a6065383b908a743e5275ef111edb1579bc205e9",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "316d801e-8250-4c0c-9f7b-454ec4a1ecf1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/basketApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/basketApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 100,
                  "endLine": 100,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a0081c36c23264dbae1f24623a9c0ba023a97b0fbfaa2b8bda2cc8c5b7391bc8",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb",
            "identity": "59f416bc-43fb-4da0-9924-6673c633e811"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/basketApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/memoryApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 25,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1a3f3c45169d607dc5fcac57e2c53356403ef2d8aee367666a7c78fc12abf25c",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "7e55e9cd-b920-4edb-96d5-8a77099a663b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/memoryApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/memoryApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 62,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "58604b8096a6f76da8bbd414b2a3c7c93ef5a1e6d2fc9c37006f192804c8f470",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "998c4fa6-1740-4500-9a42-3ee0af371a3e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/memoryApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 62,
                            "endLine": 62,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/memoryApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 88,
                  "endLine": 88,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ad3c2a9c2557c89114766fec94c83189794cee40169b8e7f147b040267867f96",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "e7df17b5-871b-4490-b73f-9f6f95ea2f4f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/memoryApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 88,
                            "endLine": 88,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 15,
                  "endLine": 15,
                  "startColumn": 32,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "09060351c157e3897edbfb60f9366f734f819f588cde79ad7907e06a66bc5710",
            "1": "dffba3de.3f481afb.bd65d204.e052b9a9.79a7d027.10d85176.fb19cbf2.870b3dbe.dffba3de.4773f344.bd65d204.e052b9a9.79a7d027.10d85176.fb19cbf2.870b3dbe",
            "identity": "26252b5a-ce0c-4206-8d82-4adb50cc639c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7cfaf84b684228c6f9df51d3755a15e52b1d21998b2b9b7cb60b08120df4078d",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.529cfbbb.dffba3de.4773f344.bd65d204.e052b9a9.79a7d027.10d85176.fb19cbf2.870b3dbe",
            "identity": "f6af85fc-0550-4b9c-8d6f-3b5ec62bcef5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f2fb8063ce189c878da826d85e1ad216bad2003e165766864b774879a4d8109b",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.529cfbbb.dffba3de.4773f344.bd65d204.e052b9a9.79a7d027.10d85176.fb19cbf2.870b3dbe",
            "identity": "d7a7779a-424c-4577-8bf4-69210c289a57"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 100,
                  "endLine": 100,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d1873bef5ed1bb1f0bc53bf85926fa7bf7d054b6164943ed96a5523de6d6eab1",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.529cfbbb.dffba3de.4773f344.bd65d204.e052b9a9.79a7d027.10d85176.fb19cbf2.870b3dbe",
            "identity": "8d2d62b0-3f33-4562-8d21-99e04d533462"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/chatBotSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 153,
                  "endLine": 153,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e8e508d4259c8d6ce31281231fa8fe75eeeeb550b507263f1ea9e3f74a5439cd",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.529cfbbb.dffba3de.4773f344.bd65d204.e052b9a9.79a7d027.10d85176.fb19cbf2.870b3dbe",
            "identity": "5ef2e5ec-48aa-4c13-927b-2cfeb693c09e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/chatBotSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 153,
                            "endLine": 153,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/orderHistoryApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0cdfd7aa986edf43ecaec0f3114aef91048952fbbced2b2719c3949fd0cfac2f",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba",
            "identity": "2bc198ac-e457-4a19-99a2-5c375e9f9c8b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/orderHistoryApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/orderHistoryApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 55,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c9bb4ca3af5821d73b9e58b2d9e3759ce4e5552f3f89d115c8de247670bf88d4",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "742f4ca1-7fe8-482c-9ae7-34ff4716ff7a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/orderHistoryApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/orderHistoryApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a0e92a9ac3b09f3968f2a8fa68678ee39d1d5b1ae1dfa293ad98376d151a087c",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba",
            "identity": "ee485df6-7aae-4d85-b604-bf240d0da9c9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/orderHistoryApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/orderHistoryApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 89,
                  "endLine": 89,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b9335ec2ddfdf7c93fd4233fb83ded8743ab3068075f114ddd5118e510e240fe",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0",
            "identity": "acb7fd7f-e545-4ac1-ae3d-eb2e3f80c061"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/orderHistoryApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 89,
                            "endLine": 89,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/orderHistoryApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 108,
                  "endLine": 108,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "87b46196c720b2804470cc5bcf18bb81e7f2fcb2cf389faa1e67ba62a459fb53",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba",
            "identity": "65b389f2-db8b-4cfd-9f58-c39c2611f0f4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/orderHistoryApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 108,
                            "endLine": 108,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/orderHistoryApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 128,
                  "endLine": 128,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8703cce5e126d99de62d1d3bcc35af257c378123ca6b7875395c53fe0ee25f64",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "1022debd-77f3-4ac7-908d-a010be7cb8fd"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/orderHistoryApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 128,
                            "endLine": 128,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/orderHistoryApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 148,
                  "endLine": 148,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "faab09aa28e5318266279b7f286d4d992c6040375dd0de3fc1c2cd18b7b07f36",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0",
            "identity": "057e2d57-1cf2-4695-9ee5-8ddedd60f50a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/orderHistoryApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 148,
                            "endLine": 148,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/feedbackApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 118,
                  "endLine": 118,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "33bf01fa5b07806c1fb64dcdf8b7f625357c05f7e81695e960c2a655649c236a",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb",
            "identity": "2820a251-5c5c-4a60-859f-a9b77dd9ea52"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/feedbackApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 118,
                            "endLine": 118,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/feedbackApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 151,
                  "endLine": 151,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2acf282cdd45f992dc949af800715b53ddcec63830daf5e380ba330ee250e577",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb",
            "identity": "9e7c07a2-982c-41d4-adb4-cb06a77452de"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/feedbackApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 151,
                            "endLine": 151,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/basketItemApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d56a48ee57febf3a36fec96187d45881239209657b62d740d4515e33b7cae14f",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "bcd6cc55-4b43-4b55-908c-3d1bfb74b7d8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/basketItemApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 416,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userProfileSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 19,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c69e46c4266421892f540c8fe861b4cfc53c59831d8670783d9b26c5650705ac",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "b02bdb9c-6c66-47a6-8bda-a999c45187e5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userProfileSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 416,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c8698d1e273a3f9c46a2bb90a60bd031ef9db6dd9f0f3582c4a5c44174021515",
            "1": "25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922.25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922",
            "identity": "0993241a-ae5a-45d6-9548-21c49a6ac2a3"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 59,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "601a674aaf3eff2e74462cfcfcf36373d193765b47f9b04c91f5db4116e81a5d",
            "1": "25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922.25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922",
            "identity": "3b27c427-f0af-43d3-892c-273c83c59f0f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bc2db980e4692e318e89c4a307dc77c05f0a08aa4ebdc2ad357292990100ac33",
            "1": "25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922.25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922",
            "identity": "a7476e34-41d4-4952-b92d-624730fd4cab"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 103,
                  "endLine": 103,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "94e395e5a99296f6eb195fb5215e718ed0910d72473e0cdcc64ee02a326bcd6a",
            "1": "25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922.25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922",
            "identity": "ee04a43f-0726-4525-8bb8-4ccc268929a9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 103,
                            "endLine": 103,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 125,
                  "endLine": 125,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bb82435fecb10dfaffb2d3c8941b995edaa68d7ab70c41702e24ff95e058ca34",
            "1": "25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922.25d88c1f.3f481afb.bd65d204.567b86d1.79a7d027.fcf3002d.919bcfd9.f7e17922",
            "identity": "b1d32e90-d01c-4945-be34-f32418d3828a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 125,
                            "endLine": 125,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 144,
                  "endLine": 144,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cf9549c114348eee4a1cb6fc03362c25d4164274f647c192da87d6f47ffcc28f",
            "1": "12567ef6.3f481afb.bd65d204.817851c8.79a7d027.211b8a24.6053c1e2.93dd5d54.12567ef6.3f481afb.bd65d204.817851c8.79a7d027.211b8a24.6053c1e2.93dd5d54",
            "identity": "d948fbdd-7619-4e38-b09f-33a0cf3ca4f1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 205,
                  "endLine": 205,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "15d7701a6f8e5234683de66bfc2dd1fcdf140856f53790f864ef60244f02e64f",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.414e23af.3cee0341.12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.414e23af.3cee0341",
            "identity": "f00281b2-9214-456a-8103-7f274ef5582f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 205,
                            "endLine": 205,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/userApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 216,
                  "endLine": 216,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "79b250c54eeeac54a65ecb981edcd43b3e78d42f8f78603d5ea187d4e5919a3f",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb",
            "identity": "3baebdb2-b3ab-417d-a103-ec11d93a1999"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/userApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 216,
                            "endLine": 216,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 19,
                  "startColumn": 32,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b75ecfd5ecb5cf9174a2d692047475da599e57ef022675ece9eebe3692eb6c19",
            "1": "70220a27.be691101.bd65d204.d7919eeb.79a7d027.fa41e772.fb19cbf2.870b3dbe.70220a27.4773f344.bd65d204.d7919eeb.79a7d027.fa41e772.fb19cbf2.870b3dbe",
            "identity": "16d446ae-6094-4049-9af5-514cb0d55889"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 162,
                  "endLine": 162,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "85f85215b4ae98c8b5818d0c53b0c8e800bbb560759a86ba1fa95e7eb333f80d",
            "1": "01e8e257.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.9add11d4.bfc007a1.4773f344.bd65d204.e052b9a9.79a7d027.10d85176.fb19cbf2.870b3dbe",
            "identity": "b9a6cfac-8b7d-4525-b81b-8ae69143c9d6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 162,
                            "endLine": 162,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 187,
                  "endLine": 187,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5953d014b78bbccc8fe872a2db8714566e6a8ae46a9d557732b39c101d97e666",
            "1": "01e8e257.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.fb19cbf2.9add11d4.bfc007a1.4773f344.bd65d204.e052b9a9.79a7d027.10d85176.fb19cbf2.870b3dbe",
            "identity": "73d022f0-8ea7-4c05-a186-76233d685784"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 187,
                            "endLine": 187,
                            "startColumn": 7,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 221,
                  "endLine": 221,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5f16b1feb36d251fe75a0fdf49e3fa3b6e1a2abecb01d9b340caafaa2bcfef1e",
            "1": "e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7.e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7",
            "identity": "3b30adff-be5e-4078-9cd0-469828d0d902"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 221,
                            "endLine": 221,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 265,
                  "endLine": 265,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2f2c0aeed5afd3bf2cdd8af85614a096c164e0f80e429e55c3c467183b3ecda6",
            "1": "e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7.e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7",
            "identity": "396e34bf-1dfe-43a0-8a7a-8cedf4d146ff"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 265,
                            "endLine": 265,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 293,
                  "endLine": 293,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "dc3e23ecbdd4a96dc586f4218f5d75a365345852537b3936f579eaf98a04ee76",
            "1": "e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7.e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7",
            "identity": "15d5d6f9-a3ef-43d6-a4ce-a77ac5340e74"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 293,
                            "endLine": 293,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 321,
                  "endLine": 321,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3280b66a4a2a961595d271f324d96d2d69ea7862ac7092df410c90fda7cb4939",
            "1": "e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7.e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7",
            "identity": "aad2893f-0400-484d-991b-af73d95eae76"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 321,
                            "endLine": 321,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 349,
                  "endLine": 349,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7cebc17af2c8f3859369a409c9055a21b03d6619cc8b97870175b282b57c9afe",
            "1": "e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.fb19cbf2.9add11d4.e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.fb19cbf2.9add11d4",
            "identity": "57bdb147-9fba-416d-9498-300ea0c79848"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 349,
                            "endLine": 349,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 377,
                  "endLine": 377,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ecfdbde6fef1a13c6707fe788b27056a54690c10a0f325aa3b6f07db241136ce",
            "1": "e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7.e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7",
            "identity": "c12f8e65-c37f-4c3d-a332-426182a8313c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 377,
                            "endLine": 377,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 411,
                  "endLine": 411,
                  "startColumn": 11,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "74f61dda1048b73324926036cfd1b2d471170801d755bbe7d4f2354aa7fafa45",
            "1": "e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7.e0fda459.3f481afb.bd65d204.d7919eeb.79a7d027.f7edcf51.cd61fc56.0caa92f7",
            "identity": "bdfff415-104f-4b4d-b57a-981c3230de1f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 411,
                            "endLine": 411,
                            "startColumn": 11,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/noSqlSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 69,
                  "startColumn": 95,
                  "endColumn": 103
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b98e19a14aa1a2e5a826df5cb4fc9fa52abcfde11cee052b413ba184b93b0bbe",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.10f2eeef.d9612bd8.12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.10f2eeef.d9612bd8",
            "identity": "f90e6f10-b906-42ab-b003-510447aabbeb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/noSqlSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 95,
                            "endColumn": 103
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/noSqlSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 106,
                  "endLine": 106,
                  "startColumn": 95,
                  "endColumn": 103
                }
              }
            }
          ],
          "fingerprints": {
            "0": "94bd0768b47ef897bb6a158e9d81171d89c831ef0f074885a417a1fb55ab4851",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.10f2eeef.d9612bd8.12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.10f2eeef.d9612bd8",
            "identity": "24d8e6bc-db8c-4e2c-8780-d25212bc9882"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/noSqlSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 106,
                            "endLine": 106,
                            "startColumn": 95,
                            "endColumn": 103
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bd9610dc1890aba8831a2ffc29472fb4cbc8f26c5015798398590511f08c2be8",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "50f409bd-c431-4955-8ec3-70e300a8b250"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 37,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8e17639b27ecf1e2ee139833a28d8e8975bd06e48872010444a8a89784d2c0e0",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba",
            "identity": "d53fc9a2-bde3-4539-976f-0d9ddfac96ff"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "14a9efe9955ac343d71a1514ef7f351eccd510cae2272ae8679bcb662f36679b",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0",
            "identity": "2f8cb9a2-8057-4f46-a771-02df3bdcaa0c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 71,
                  "endLine": 71,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e5b963b0baaf05ef6442fb8894acdf3906df5751dd6c2c1fceaa5ec73705bbfb",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "52c4a2e2-8074-4b08-b67e-8b2099796a4f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 92,
                  "endLine": 92,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4763c387916906e8c8f44c526848dcfa0665377a2594b1160cd15d12f5618c7b",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba",
            "identity": "8b81c7c6-b20b-41d9-9f68-f5390de4c6a1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 92,
                            "endLine": 92,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 113,
                  "endLine": 113,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "39c3e5cc5e718e90ed8b05011b851356a940935493031be8d28ee3efdd66356b",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0",
            "identity": "a4f2d7e4-6b05-4975-a711-53fc533a2723"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 113,
                            "endLine": 113,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 136,
                  "endLine": 136,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b276beca8c5820598267f187f003fddc2a2c2f7747a98a69eff0d0cf96ef6e15",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "dda93033-c286-469c-b498-f3a5aad6fbee"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 136,
                            "endLine": 136,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 154,
                  "endLine": 154,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "894c0796062bcb1ee08a5a0105d69c8debae94def54105517377356867cade76",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba",
            "identity": "2d5ffff6-a34b-402b-84ed-f2e8403cbb00"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 154,
                            "endLine": 154,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 172,
                  "endLine": 172,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3337ea1fbc9061056b91974a4bb26eac9ecbecafe7dbd12bd330ca77d0cc969c",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0",
            "identity": "852caf37-e7c5-4c10-8dca-e34098811d8f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 172,
                            "endLine": 172,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 189,
                  "endLine": 189,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a1a5e3e265d293e1005c2379d067ec2c8b4fe30b10d206d5be4edd8691ce278b",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "b037462a-0bc9-450b-b65a-cce35c9b59e5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 189,
                            "endLine": 189,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 210,
                  "endLine": 210,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "34272d55dad032e371b966843cd498d7d17ac48fccb2e6236a44417104f0bb4f",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "6eef1bd6-9c3a-4052-a8ca-d4947c68d062"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 210,
                            "endLine": 210,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 231,
                  "endLine": 231,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "99693cf82ee04ad68ec9adef9431ca248b5d151e997fff94e06dfdf41e698e7a",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0",
            "identity": "f699b00a-4713-421e-904b-a75ca2b8a5b4"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 231,
                            "endLine": 231,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 254,
                  "endLine": 254,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8fc75936f0f63a2cef2d7457d8ab4a94c0832407cb0b2e667f51a790481c5ed8",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.d33bc0e0",
            "identity": "69bab2f3-0a70-40d6-ba8b-718f23f7082e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 254,
                            "endLine": 254,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 271,
                  "endLine": 271,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d3f05e305c8a48ce3cd86d15a9f17d9332d2747c01fb5acd961c402b371110ba",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba",
            "identity": "e7e38faa-5441-4044-b0d7-a7c60dcfc048"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 271,
                            "endLine": 271,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/quantityApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 288,
                  "endLine": 288,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "63220625b83615dabb82bba6b2216beba016a85a4b73cec9852984c6c10ad5c4",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "217881df-bbdd-4211-bd1e-79212d4a3a07"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/quantityApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 288,
                            "endLine": 288,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/profileImageUploadSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 25,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "19476e77f920b8def9f7ded6362353e3a89b2b4c27ad15fc4b29f19665c5c2ac",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "70c251d0-aaaf-42a2-93c1-b3b02703517e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/profileImageUploadSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/profileImageUploadSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 51,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ae7c7aa628ed7dac20071f77d8d026e44da8c0bc71e7274bd734bd059f7e582f",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "0a1c6bf6-a6f2-4ec6-9faf-1075c119d5e1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/profileImageUploadSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/profileImageUploadSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 94,
                  "endLine": 94,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f429c0aad2301838e88e9916f68c9835eddafc658f8233d23c28a2d918348d21",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "e314fd17-5587-42ca-baaf-ff2afd4f31ae"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/profileImageUploadSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 94,
                            "endLine": 94,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/profileImageUploadSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 119,
                  "endLine": 119,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d02e7ba2d04177b61177549c8df1fd8be12608d47c52760dc9f0431a1f6e77f7",
            "1": "99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed",
            "identity": "94accfc0-8417-423f-99d2-cfb5f3326056"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/profileImageUploadSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 119,
                            "endLine": 119,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/productReviewApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 104,
                  "endLine": 104,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "610c6de7383879cd40018aed62aff771f685f0e13a1fc5c0abcb93b6712e1196",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb",
            "identity": "c1db826e-cb9a-454e-badb-629bf4542db1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/productReviewApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 104,
                            "endLine": 104,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/erasureRequestApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3736fe103ee15085ac1a7459f7d1ff42ce2d4ffa1ee7f572b7127dcfa23b8907",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb",
            "identity": "3c949350-9da9-42c8-9567-6cf1c5ce6abd"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/erasureRequestApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/erasureRequestApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "startColumn": 17,
                  "endColumn": 25
                }
              }
            }
          ],
          "fingerprints": {
            "0": "59d2835177428a0fbcdfb41dc0ca8a436cf58b9269a7515c46b7489a0f95bda8",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.529cfbbb",
            "identity": "fc5b11d9-8b63-4f93-ab60-03f1c6cb853b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/erasureRequestApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/passwordApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 20,
                  "endLine": 20,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "de894fa68d61ded57a338bdd91f43cfef0a45362519218db8e931b7cb4d03b5b",
            "1": "99c6641b.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.bd0778e7.67ee6bdd.99c6641b.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.bd0778e7.67ee6bdd",
            "identity": "64ea5610-8df9-48b4-8841-103259f9249a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/passwordApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/passwordApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "startColumn": 13,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "538c1e1ad9ea9d5ac73cc509f67549ad38d84e0c43fd86f8e94e123d362c651b",
            "1": "99c6641b.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.bd0778e7.67ee6bdd.99c6641b.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.bd0778e7.67ee6bdd",
            "identity": "df945649-7415-44d3-b4f4-0e474d183be8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/passwordApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 13,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/passwordApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 47,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a66e0c803c12165a7418ff4c672e3e84896f8e252278992056d78e04103a83e2",
            "1": "b9e60be0.3f481afb.44ede690.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8c72e56a.b9e60be0.3f481afb.44ede690.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8c72e56a",
            "identity": "976a4a56-c12e-4a67-9efd-cbf011d5c4db"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/passwordApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in password.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[password](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/passwordApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 93,
                  "endLine": 93,
                  "startColumn": 9,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "22a709dce80883c1e664c0e448d67099fdb45f6d5fef288cceb0c810544bea2b",
            "1": "12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2ae8f124.12567ef6.3f481afb.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2ae8f124",
            "identity": "d64d7151-6dfb-4e5b-8019-0e6f3cb64a94"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/passwordApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 93,
                            "endLine": 93,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/dataExportSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 21,
                  "startColumn": 87,
                  "endColumn": 95
                }
              }
            }
          ],
          "fingerprints": {
            "0": "83d0f919dd548b6892d72a76dfd2d360edf0424e418169d62db9bf751ac42860",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.3cee0341.d557d5dd.4773f344.e115913f.e052b9a9.4babb330.4c9ec5d8.cd61fc56.382555c6",
            "identity": "819f9f53-2fa1-44d2-86c3-3c008044aaec"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/dataExportSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 416,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/changePasswordSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 12,
                  "startColumn": 87,
                  "endColumn": 95
                }
              }
            }
          ],
          "fingerprints": {
            "0": "476d1904b8c53855b4df9ffa655d05d62ba6de3dc6671a380e7b2a3bd82e4193",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.4ca94ad3.ce4a9d89.3cee0341.d557d5dd.4773f344.e115913f.e052b9a9.4babb330.4ca94ad3.cd61fc56.382555c6",
            "identity": "33b6ade7-c193-4e2b-af5b-5d000aa54535"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/changePasswordSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/changePasswordSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 33,
                  "startColumn": 88,
                  "endColumn": 96
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5babff9dc7700b847717f9693285b66aba452b51f4a95103ee9150332c087e87",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.2ae8f124.d557d5dd.4773f344.e115913f.e052b9a9.4babb330.4c9ec5d8.cd61fc56.875f0f03",
            "identity": "857e553d-4c07-436b-802f-0428c2b6b7bd"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/changePasswordSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/searchSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 67,
                  "startColumn": 87,
                  "endColumn": 95
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f3565631475d517d79f70a984463af16bbd0bf073abdfb00a58ecf1e240ede41",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.d557d5dd.daa9d8e7.e115913f.d002f2fb.4babb330.4c9ec5d8.f144dc57.382555c6",
            "identity": "abda7bf7-3119-4c41-bb47-6f529c220add"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/searchSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/searchSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 77,
                  "startColumn": 87,
                  "endColumn": 95
                }
              }
            }
          ],
          "fingerprints": {
            "0": "623e1e0c490d4e506ede3fd423f95c113fe4358ec6613bc683943ef54a945df8",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.d557d5dd.daa9d8e7.e115913f.d002f2fb.4babb330.4c9ec5d8.f144dc57.382555c6",
            "identity": "56d30c89-c4ab-42ff-a407-b39a40d36b0d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/searchSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 77,
                            "endLine": 77,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/totpSetupSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 33,
                  "endLine": 33,
                  "startColumn": 7,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d191078fc13a54ae5c8e3f7aa63e4d6ca0f2a91a23e68bc03f646f4a25837c24",
            "1": "01e8e257.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.9add11d4.d557d5dd.4773f344.e115913f.e052b9a9.4babb330.4c9ec5d8.cd61fc56.382555c6",
            "identity": "523d6340-2777-40a2-b20f-72f7ea435809"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/totpSetupSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/totpSetupSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 45,
                  "startColumn": 85,
                  "endColumn": 93
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e649a54ff0b9b02ca6cd72df6fe9eb78014f762e7eb4563ad09586e0238c20ad",
            "1": "12567ef6.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.3cee0341.58571cf2.4773f344.e115913f.e052b9a9.4babb330.4c9ec5d8.cd61fc56.382555c6",
            "identity": "d7c92165-56f2-4a2f-bcf4-6084838fa77f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/totpSetupSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/registerSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "startColumn": 89,
                  "endColumn": 97
                }
              }
            }
          ],
          "fingerprints": {
            "0": "964c555bcb8c995c2aaaf3ca7288679167fdb32cad69ce191e7a6bb4794bdada",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.d557d5dd.daa9d8e7.e115913f.d002f2fb.4babb330.4c9ec5d8.f144dc57.382555c6",
            "identity": "b233b353-78de-413a-9699-ee33c48924c6"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/registerSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/complainSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "startColumn": 85,
                  "endColumn": 93
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a1a6bc75964c9ada8815a105eb0ed4630de99d0eb6096486b5889a58976dbdee",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.d557d5dd.daa9d8e7.e115913f.d002f2fb.4babb330.4c9ec5d8.f144dc57.382555c6",
            "identity": "79ed75e2-a7c7-487e-bcfb-68d70b634c43"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/complainSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 25,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 416,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/basketSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 12,
                  "startColumn": 87,
                  "endColumn": 95
                }
              }
            }
          ],
          "fingerprints": {
            "0": "bbe7e7332663bfc3d9534dcf590a076afd1f76508761ba9b165f97658cb6ef7e",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.d557d5dd.daa9d8e7.e115913f.d002f2fb.4babb330.4c9ec5d8.f144dc57.382555c6",
            "identity": "321d97f8-2e3a-46b1-9c98-5550a88d543d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/basketSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/basketSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 71,
                  "endLine": 71,
                  "startColumn": 85,
                  "endColumn": 93
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7e8652622063a3aba222bc0651a58dbd41ccf50ee06d4805e2b58ffdb743f589",
            "1": "99d9a5e9.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.4773f344.e115913f.e052b9a9.4babb330.4c9ec5d8.cd61fc56.382555c6",
            "identity": "f593edad-45f6-4adb-815e-3c794594dae7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/basketSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/restApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "startColumn": 89,
                  "endColumn": 97
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e23ec8ad3157f5b1036a24efae17e1f83ba2e4dd9908dcbb8d6dfc0637e7e301",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.d557d5dd.daa9d8e7.e115913f.d002f2fb.4babb330.4c9ec5d8.f144dc57.382555c6",
            "identity": "d3f9844d-c333-4dc4-ac6a-0865af366536"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/restApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/restApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 100,
                  "endLine": 100,
                  "startColumn": 89,
                  "endColumn": 97
                }
              }
            }
          ],
          "fingerprints": {
            "0": "798b904f5364dfae3c1ded610526250e7842250c750f969cb3b66c9048405f75",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.d557d5dd.daa9d8e7.e115913f.d002f2fb.4babb330.4c9ec5d8.f144dc57.382555c6",
            "identity": "f5524af6-d0ee-4611-9a39-f0a047bb06ca"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/restApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 100,
                            "endLine": 100,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/administrationSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 10,
                  "startColumn": 87,
                  "endColumn": 95
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fba5e24123ad7d02bfa68b593f3f86e6d37fe82d1e72a8cc4d4714035a5e17dc",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.d557d5dd.daa9d8e7.e115913f.d002f2fb.4babb330.4c9ec5d8.f144dc57.382555c6",
            "identity": "aadd7e36-5eeb-425b-81ee-e2f58afd4fd7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/administrationSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/administrationSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 21,
                  "startColumn": 87,
                  "endColumn": 95
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0e3d7258befb8215ad041404a747f85be635e1787c93533eca04df4e307b33ac",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.d557d5dd.daa9d8e7.e115913f.d002f2fb.4babb330.4c9ec5d8.f144dc57.382555c6",
            "identity": "7642a6b8-2af7-4679-aa8b-729be20ea936"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/administrationSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/b2bOrderSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 10,
                  "startColumn": 85,
                  "endColumn": 93
                }
              }
            }
          ],
          "fingerprints": {
            "0": "df7eadc7a414e3516020cff6f4db0a00d63491d5c699c7ac84a489f883736cc3",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.d557d5dd.daa9d8e7.e115913f.d002f2fb.4babb330.4c9ec5d8.f144dc57.382555c6",
            "identity": "06e90605-7662-4ff4-96da-8e2d9499665a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/b2bOrderSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 25,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 416,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/chatbotSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "startColumn": 85,
                  "endColumn": 93
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1a082ec03007a85371ae3507ab1dc945d95d8dcaf4fbeef7773c0aec2a81d724",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.d557d5dd.daa9d8e7.e115913f.d002f2fb.4babb330.4c9ec5d8.f144dc57.382555c6",
            "identity": "01e758c0-eedf-4a80-a54a-d80d48f08968"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/chatbotSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 25,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 416,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/noSqlSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 16,
                  "startColumn": 89,
                  "endColumn": 97
                }
              }
            }
          ],
          "fingerprints": {
            "0": "75ae641d6e50f6826c82a7c5684ecbff418547fff9946ac77adbe2b7fbda33d2",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.d557d5dd.daa9d8e7.e115913f.d002f2fb.4babb330.4c9ec5d8.f144dc57.382555c6",
            "identity": "ebf28cf1-4fb0-4aee-9481-08e3b8759368"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/noSqlSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/profileSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 12,
                  "startColumn": 85,
                  "endColumn": 93
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4ac666bf7d5a362e685f3aec96448c57789fad2833b263c0e6113bcfdda3eea6",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.d557d5dd.daa9d8e7.e115913f.d002f2fb.4babb330.4c9ec5d8.f144dc57.382555c6",
            "identity": "a0d74467-b989-49c5-945e-982a486578c9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/profileSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 25,
                            "endColumn": 30
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 416,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/deluxeSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "startColumn": 85,
                  "endColumn": 93
                }
              }
            }
          ],
          "fingerprints": {
            "0": "df0273d6214abee4c5de756ec84efd6c5c67214ccb843c105d793c46d18671e5",
            "1": "99d9a5e9.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.4773f344.e115913f.e052b9a9.4babb330.4c9ec5d8.cd61fc56.382555c6",
            "identity": "c6f1a494-89e3-4a19-8abf-730921d39df5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/deluxeSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/deluxeSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 21,
                  "startColumn": 85,
                  "endColumn": 93
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e43791319c175d5bfed7e10605a9927899bd34a7bb2b91cd63b1f161d03b036c",
            "1": "99d9a5e9.4773f344.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.dae232ed.99d9a5e9.4773f344.e115913f.e052b9a9.4babb330.4c9ec5d8.cd61fc56.382555c6",
            "identity": "147932bc-cb7e-401b-a22f-fee50f0fb3f1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/deluxeSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/contactSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 24,
                  "startColumn": 87,
                  "endColumn": 95
                }
              }
            }
          ],
          "fingerprints": {
            "0": "854212961a39b533a3136f49582122ee94002289450a11dcc8a5a934c555dad7",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.d557d5dd.daa9d8e7.e115913f.d002f2fb.4babb330.4c9ec5d8.f144dc57.382555c6",
            "identity": "7b0bc5fe-3c91-4a0d-926e-5eaf97109fa1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/contactSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoHardcodedPasswords/test",
          "ruleIndex": 1,
          "level": "note",
          "message": {
            "text": "Do not hardcode passwords in code. Found hardcoded password used in login.",
            "markdown": "Do not hardcode passwords in code. Found hardcoded password used in {0}.",
            "arguments": [
              "[login](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/contactSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 49,
                  "startColumn": 89,
                  "endColumn": 97
                }
              }
            }
          ],
          "fingerprints": {
            "0": "eafbb81844cbec245e57caa377b30f48a3a2f144d36a4b75ebd2bc3d67bcba4f",
            "1": "12567ef6.fb31f608.bd65d204.e052b9a9.79a7d027.fcf3002d.ce4a9d89.8b1b14ba.d557d5dd.daa9d8e7.e115913f.d002f2fb.4babb330.4c9ec5d8.f144dc57.382555c6",
            "identity": "ae01e5b1-508c-48cc-baa8-914ce739fe61"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/contactSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 49,
                            "endLine": 49,
                            "startColumn": 29,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 466,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/premiumReward.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 14,
                  "startColumn": 10,
                  "endColumn": 4
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5720dd79eec4c9a8e8f4db3d3ffb048f06b100935ffccdc54aebdf4c5b7c48e1",
            "1": "cbabde2c.4773f344.607187b5.c559ebce.fd1fa73f.5eabb05b.83265159.3cee0341.87ba341e.4773f344.d9fd6cba.c559ebce.fd1fa73f.45ba166c.83265159.242e913b",
            "identity": "440f3526-37db-4070-87e3-f67e9099e258"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/premiumReward.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 14,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/premiumReward.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 504,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/userProfile.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 62,
                  "startColumn": 10,
                  "endColumn": 4
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e9cfa0053d276ffc143c002fa4db5cab9e763aa203c52f41e7b0003dc0a930c8",
            "1": "cbabde2c.4773f344.607187b5.c559ebce.fd1fa73f.5eabb05b.83265159.3cee0341.c3f8dfad.4773f344.8b18f948.c559ebce.aea31650.8020cfdf.83265159.692f7b85",
            "identity": "e1e601a1-1266-4bb3-9a02-c8f19fc65c6b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 62,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": [
            {
              "justification": "Casey show off",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2025-01-15T18:33:44.702Z",
                "ignoredBy": {
                  "name": "Ezra",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/easterEgg.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 14,
                  "startColumn": 10,
                  "endColumn": 4
                }
              }
            }
          ],
          "fingerprints": {
            "0": "15c011551d1110a2cff6e3fe05f7f03e0c9220b2510dc206b599a934992a1e74",
            "1": "cbabde2c.4773f344.607187b5.c559ebce.fd1fa73f.5eabb05b.83265159.3cee0341.87ba341e.4773f344.d9fd6cba.c559ebce.fd1fa73f.13dca07d.f6c5587e.242e913b",
            "identity": "652b6181-b59e-446d-9e08-974378674801"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/easterEgg.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 14,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/easterEgg.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 504,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": [
            {
              "justification": "Really good reason",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2025-01-23T16:57:17.779Z",
                "ignoredBy": {
                  "name": "Ezra Tanzer",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/languages.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 72,
                  "startColumn": 10,
                  "endColumn": 4
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7ae9062a35ab406bae3a52dd59842f82b226ae38e79dcdd1b256fdb0205dbc11",
            "1": "099c30d7.9c6e2949.8b18f948.c559ebce.fd1fa73f.5eabb05b.83265159.be9bb487.c3f8dfad.4773f344.eff3b32f.c559ebce.aea31650.becd9ff1.83265159.4b6faca4",
            "identity": "c2036830-7d37-400a-a55b-93edfa435a11"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/languages.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 72,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/languages.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/profileImageFileUpload.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 42,
                  "startColumn": 10,
                  "endColumn": 4
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ae9f213a4f8ec39c35cea2954fdc9aaed6b600f759b6d2fd30a2a790de8f1c9f",
            "1": "e0fda459.9c6e2949.8b18f948.c559ebce.fd1fa73f.5eabb05b.83265159.be9bb487.cf7733e4.4773f344.eff3b32f.c559ebce.91fa4b71.becd9ff1.e1eea83d.9b5cefb9",
            "identity": "59c5924e-c3ef-4738-8dec-ddc525e8ce5f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 42,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 554,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": [
            {
              "justification": "Showing Paulius",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2025-01-22T16:57:08.883Z",
                "ignoredBy": {
                  "name": "Ezra Tanzer",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/privacyPolicyProof.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 14,
                  "startColumn": 10,
                  "endColumn": 4
                }
              }
            }
          ],
          "fingerprints": {
            "0": "e28eea9e15952eb3d658c5f55f38faf389c17b48c764456dce6d4c5f20210c6d",
            "1": "cbabde2c.4773f344.607187b5.c559ebce.fd1fa73f.5eabb05b.83265159.3cee0341.87ba341e.4773f344.d9fd6cba.c559ebce.fd1fa73f.45ba166c.acd4f248.925e8d7b",
            "identity": "f16c0190-5a69-4524-9c5e-d5ac17004a37"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/privacyPolicyProof.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 14,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/privacyPolicyProof.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 504,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/NoRateLimitingForExpensiveWebOperation",
          "ruleIndex": 2,
          "level": "warning",
          "message": {
            "text": "This endpoint handler performs a file system operation and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "markdown": "This {0} performs {1} and does not use a rate-limiting mechanism. It may enable the attackers to perform Denial-of-service attacks. Consider using a rate-limiting middleware such as express-limit.",
            "arguments": [
              "[endpoint handler](0)",
              "[a file system operation](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/videoHandler.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 67,
                  "startColumn": 10,
                  "endColumn": 4
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c0b0db6a1ba26f5bd1124b4d0ccfae0cc18c155324d80fc208aa7994c853eff9",
            "1": "2fa3a5cc.4773f344.607187b5.c559ebce.fd1fa73f.5eabb05b.83265159.3cee0341.c3f8dfad.4773f344.a32ed1a1.c559ebce.aea31650.8020cfdf.83265159.2f05c567",
            "identity": "cf9caf90-fac3-475d-8e43-0f7e42f10df1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/videoHandler.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 67,
                            "startColumn": 10,
                            "endColumn": 4
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/videoHandler.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 5,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 504,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": [
            {
              "justification": "Decently good reason",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2025-01-23T21:53:12.417Z",
                "ignoredBy": {
                  "name": "Ezra",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/HttpToHttps/test",
          "ruleIndex": 3,
          "level": "note",
          "message": {
            "text": "http.get uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "markdown": "{0} uses HTTP which is an insecure protocol and should not be used in code due to cleartext transmission of information. Data in cleartext in a communication channel can be sniffed by unauthorized actors. Consider using the https module instead.",
            "arguments": [
              "[http.get](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/productReviewApiSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 61,
                  "startColumn": 5,
                  "endColumn": 13
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c1bb40cb8ac484f26ed275614045bddb322283a99035a9d724867282bfb1dd5a",
            "1": "3282a256.f172d67b.b5b4772f.c559ebce.2fce9a75.a362d65a.cd61fc56.c081cf9d.3282a256.93dc32e3.8b18f948.9256516f.f7b6c27c.5fce695c.cd61fc56.9965dac8",
            "identity": "8dc61f41-ee53-488c-abe1-cbbf85b87e9b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/productReviewApiSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 61,
                            "endLine": 61,
                            "startColumn": 5,
                            "endColumn": 13
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/insecurity.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 19,
                  "startColumn": 7,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a5863a24ce43ae5e7101a7b1dd8b64ddc290e4a4662ba2c514ee39b0387dec15",
            "1": "839b1d0f.4773f344.8b18f948.d7919eeb.8d22f254.5fce695c.c8cd882a.89d75565.839b1d0f.4773f344.8b18f948.d7919eeb.8d22f254.5fce695c.c8cd882a.89d75565",
            "identity": "908399b5-477a-4004-b6ba-a11174d115ce"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/insecurity.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 20,
                            "endColumn": 902
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/insecurity.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": [
            {
              "justification": "This is a public key not a private key. ",
              "properties": {
                "category": "not-vulnerable",
                "expiration": "2025-12-18T08:00:00Z",
                "ignoredOn": "2024-12-18T19:41:47.995Z",
                "ignoredBy": {
                  "name": "Ezra",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Unsanitized input from cookies flows into fs.createWriteStream, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to write to arbitrary files.",
            "arguments": [
              "[cookies](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[fs.createWriteStream](9)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/profileImageUrlUpload.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 28,
                  "endLine": 28,
                  "startColumn": 33,
                  "endColumn": 53
                }
              }
            }
          ],
          "fingerprints": {
            "0": "34c201b7d79158d56abe742195f46eaca04a61ba1906e3226fd456ed1975f0af",
            "1": "cf7733e4.4773f344.607187b5.876f04ab.ef9f7d82.8020cfdf.e1eea83d.25f903e1.565d65b4.6b0b4bb5.81f55990.72a8f743.5ef953d3.34a4d81a.e1eea83d.9965dac8",
            "identity": "a2b00779-22d6-44c9-a52e-7af9f72e8964"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 66,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 66,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 62,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 58,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 17,
                            "endLine": 17,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 11,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 34,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 34,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 54,
                            "endColumn": 138
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 33,
                            "endColumn": 53
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": [
            {
              "justification": "CWE-23 example",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2024-12-10T19:31:26.874Z",
                "ignoredBy": {
                  "name": "Ignored by security policy",
                  "email": null
                }
              }
            },
            {
              "justification": "This is a very compelling reason",
              "properties": {
                "category": "not-vulnerable",
                "expiration": "2025-02-28T08:00:00Z",
                "ignoredOn": "2024-12-05T19:11:16.831Z",
                "ignoredBy": {
                  "name": "Ezra",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 5,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from a local file flows into fs.readFile, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to read arbitrary files.",
            "arguments": [
              "[a local file](0)",
              "[flows](1),(2),(3),(4)",
              "[fs.readFile](5)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/languages.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 25,
                  "startColumn": 11,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "92ed21462b6909b3201be63f66a62b0235fe14062d67079593e55a6809829a57",
            "1": "c3f8dfad.4773f344.607187b5.1c0eb7ca.ef9f7d82.8020cfdf.83265159.3aa86656.c3f8dfad.4773f344.8b18f948.dc733355.acf24367.37110c89.83265159.46608d7c",
            "identity": "5adf8992-e666-487d-b8d1-61a0cbfc034b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/languages.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 63,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/languages.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 63,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/languages.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 32,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/languages.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 63,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/languages.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 23,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/languages.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 11,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 552,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": [
            {
              "justification": "CWE-23 example",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2024-12-10T19:31:26.874Z",
                "ignoredBy": {
                  "name": "Ignored by security policy",
                  "email": null
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/PT",
          "ruleIndex": 5,
          "level": "error",
          "message": {
            "text": "Unsanitized input from cookies flows into fs.open, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as a path. This may result in a Path Traversal vulnerability and allow an attacker to manipulate arbitrary files.",
            "arguments": [
              "[cookies](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[fs.open](9)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/profileImageFileUpload.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 21,
                  "startColumn": 9,
                  "endColumn": 16
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d28e630cf68299d8af6cf8e67cbbfddff470579f5925f0e410d5dd1d6fdd3a71",
            "1": "cf7733e4.4773f344.607187b5.1c0eb7ca.ef9f7d82.8020cfdf.e1eea83d.8dd92b16.46b7c801.6b0b4bb5.81f55990.72a8f743.5ef953d3.fc587af7.e1eea83d.9965dac8",
            "identity": "9e6e760d-fe46-49e8-9ef4-c20be2d57f5d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 66,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 66,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 62,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 58,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 11,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 72,
                            "endColumn": 84
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 72,
                            "endColumn": 89
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 17,
                            "endColumn": 118
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageFileUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 9,
                            "endColumn": 16
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": [
            {
              "justification": "CWE-23 example",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2024-12-10T19:31:26.874Z",
                "ignoredBy": {
                  "name": "Ignored by security policy",
                  "email": null
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2e/totpSetupSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "startColumn": 7,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8f8f77e7ba62fb2f58a1bd46d222c77a1ca0b7fba8ba1ecde5fceeeddda6a454",
            "1": "a11316e5.4773f344.0e553939.e052b9a9.79a7d027.c28cabb7.7393bb6c.da35a099.d557d5dd.4773f344.bd65d204.e052b9a9.79a7d027.8020cfdf.cd61fc56.382555c6",
            "identity": "748d08b0-6567-4704-a756-ccd1b71c4641"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/totpSetupSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 19,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2e/totpSetupSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 69,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3b4a26f6732b63d74a9b2e3310e456ea8d990616d7df791573ba522d60e549c0",
            "1": "fc3065be.4773f344.607187b5.e052b9a9.79a7d027.8020cfdf.7393bb6c.d28377a2.fc3065be.4773f344.8b18f948.d7919eeb.79a7d027.8020cfdf.cd61fc56.01bd15bb",
            "identity": "7c4732ae-c861-4cd2-ace7-80afa06dedae"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 378,
                            "endLine": 378,
                            "startColumn": 24,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 69,
                            "endLine": 69,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 163,
                  "endLine": 163,
                  "startColumn": 7,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "f33be4dde0050ad818d390b475a2d0e6b742ce64663022ad94d7b0933218b429",
            "1": "a11316e5.4773f344.0e553939.e052b9a9.79a7d027.c28cabb7.7393bb6c.da35a099.fc3065be.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.55818220.89d75565",
            "identity": "ca2e9031-511b-4385-b8db-0a172fa3c639"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 19,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 163,
                            "endLine": 163,
                            "startColumn": 7,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 223,
                  "endLine": 223,
                  "startColumn": 11,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "95590213713fd9b6c736ddad74a5bed89b1d74ecb1ba63c9701db2f407b26491",
            "1": "fc3065be.3f481afb.8b18f948.d7919eeb.79a7d027.f7edcf51.cd61fc56.01bd15bb.fc3065be.3f481afb.8b18f948.d7919eeb.79a7d027.f7edcf51.cd61fc56.01bd15bb",
            "identity": "40933a57-c273-4463-9bc1-9bb8edc62ad1"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 238,
                  "endLine": 238,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "26877507a793baaa338675727201fd6ce59039f6277dac6e89f2e26318341edf",
            "1": "fc3065be.4773f344.607187b5.d7919eeb.79a7d027.8020cfdf.cb835038.01bd15bb.fc3065be.4773f344.8b18f948.d7919eeb.79a7d027.8020cfdf.cd61fc56.01bd15bb",
            "identity": "dffd26c2-cb89-403d-b824-161236b8d121"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 223,
                            "endLine": 223,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 238,
                            "endLine": 238,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 267,
                  "endLine": 267,
                  "startColumn": 11,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d11e5b80040d349f66cd63d20ddfc059cd3bb05bfdacea604bd834c029f48102",
            "1": "fc3065be.3f481afb.8b18f948.d7919eeb.79a7d027.f7edcf51.cd61fc56.01bd15bb.fc3065be.3f481afb.8b18f948.d7919eeb.79a7d027.f7edcf51.cd61fc56.01bd15bb",
            "identity": "33627240-8174-47cb-b2a9-c1c2a7f8744d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 267,
                            "endLine": 267,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 267,
                            "endLine": 267,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 282,
                  "endLine": 282,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0c39469bb6ced214a262e7de66a5848b5c529ada458efa92834688c338c6c396",
            "1": "fc3065be.4773f344.607187b5.d7919eeb.79a7d027.8020cfdf.cb835038.01bd15bb.fc3065be.4773f344.8b18f948.d7919eeb.79a7d027.8020cfdf.cd61fc56.01bd15bb",
            "identity": "6c0691ca-167b-4ba5-8be5-b9850a322d50"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 267,
                            "endLine": 267,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 282,
                            "endLine": 282,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 295,
                  "endLine": 295,
                  "startColumn": 11,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4c948eee066dbf258f99def317ffed7b1254d5439538bdf6fe8422a5491a8624",
            "1": "fc3065be.3f481afb.8b18f948.d7919eeb.79a7d027.f7edcf51.cd61fc56.01bd15bb.fc3065be.3f481afb.8b18f948.d7919eeb.79a7d027.f7edcf51.cd61fc56.01bd15bb",
            "identity": "f5a4afa1-8887-464b-be50-d47e3ab765e7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 295,
                            "endLine": 295,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 295,
                            "endLine": 295,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 310,
                  "endLine": 310,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "2c3d3c2b5b2ce6027bd597104177f815afcb799e3da8ea34bd8996702cd9cc6b",
            "1": "fc3065be.4773f344.607187b5.d7919eeb.79a7d027.f7edcf51.a4deb528.01bd15bb.fc3065be.4773f344.8b18f948.d7919eeb.79a7d027.8020cfdf.cd61fc56.01bd15bb",
            "identity": "b5bfebb3-a72a-43f2-9bca-118f7696f321"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 295,
                            "endLine": 295,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 310,
                            "endLine": 310,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 323,
                  "endLine": 323,
                  "startColumn": 11,
                  "endColumn": 17
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a0d470a7ae2b951b45ba65cf58ae72e7f26a74dd74d873b0f72a71458a914847",
            "1": "fc3065be.3f481afb.8b18f948.d7919eeb.79a7d027.f7edcf51.cd61fc56.01bd15bb.fc3065be.3f481afb.8b18f948.d7919eeb.79a7d027.f7edcf51.cd61fc56.01bd15bb",
            "identity": "6e289a3b-5e80-4024-a40d-e62b4c0f692c"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 323,
                            "endLine": 323,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 323,
                            "endLine": 323,
                            "startColumn": 11,
                            "endColumn": 17
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 338,
                  "endLine": 338,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "4470deddbbca08a45f4c7c40b738ee69484ea4702941d162a36bca0e1de9e2b3",
            "1": "fc3065be.4773f344.607187b5.d7919eeb.79a7d027.8020cfdf.cb835038.01bd15bb.fc3065be.4773f344.8b18f948.d7919eeb.79a7d027.8020cfdf.cd61fc56.01bd15bb",
            "identity": "8d16c8d2-1182-4132-a0c0-0443c273d198"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 323,
                            "endLine": 323,
                            "startColumn": 20,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 338,
                            "endLine": 338,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 350,
                  "endLine": 350,
                  "startColumn": 11,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "8e4bc08fae199d51f4b9ba3e3f9159b08ab78cd38df029b3678e06fa7049a11d",
            "1": "e0fda459.3f481afb.0e553939.d7919eeb.79a7d027.c28cabb7.cd61fc56.da35a099.e0fda459.3f481afb.0e553939.d7919eeb.79a7d027.c28cabb7.cd61fc56.da35a099",
            "identity": "a9a239cc-8e2f-4ef8-8a69-41415437dc3b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 350,
                            "endLine": 350,
                            "startColumn": 24,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 350,
                            "endLine": 350,
                            "startColumn": 11,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 352,
                  "endLine": 352,
                  "startColumn": 54,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1b5d4ea169c78ae2c518fc1d280aed863ded2bf5a904c55892c0f56abf8d91d2",
            "1": "a11316e5.4773f344.0e553939.d7919eeb.79a7d027.c28cabb7.7393bb6c.da35a099.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.55818220.89d75565",
            "identity": "c23fea84-58c2-411c-9dd2-9cdf1de78129"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 350,
                            "endLine": 350,
                            "startColumn": 24,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 352,
                            "endLine": 352,
                            "startColumn": 54,
                            "endColumn": 64
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 364,
                  "endLine": 364,
                  "startColumn": 13,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ca6d976f6da07062a19d0051f6ae24b6c191a2e08cb95fb569a459b1e50d9082",
            "1": "fc3065be.4773f344.0e553939.e052b9a9.79a7d027.8020cfdf.7393bb6c.da35a099.fc3065be.4773f344.0e553939.d7919eeb.79a7d027.8020cfdf.cd61fc56.9965dac8",
            "identity": "735465b0-f97c-4405-978e-37ce76ec8de9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 350,
                            "endLine": 350,
                            "startColumn": 24,
                            "endColumn": 58
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 364,
                            "endLine": 364,
                            "startColumn": 13,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 378,
                  "endLine": 378,
                  "startColumn": 11,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c2b64c6adeef4be09b59201a1fe632bf96ac86490c51b0301fc5d2fcf7fd9d68",
            "1": "e0fda459.3f481afb.8b18f948.d7919eeb.79a7d027.c28cabb7.cd61fc56.01bd15bb.e0fda459.3f481afb.8b18f948.d7919eeb.79a7d027.c28cabb7.cd61fc56.01bd15bb",
            "identity": "d91fb9ef-992b-4b9d-b478-7ecf32bfa73b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 378,
                            "endLine": 378,
                            "startColumn": 24,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 378,
                            "endLine": 378,
                            "startColumn": 11,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 380,
                  "endLine": 380,
                  "startColumn": 39,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "29a86bb438f8cc4af7e50166bbe8dde5f30bc72c7cca806e14b522e0f0de0c91",
            "1": "12567ef6.4773f344.607187b5.d7919eeb.79a7d027.c28cabb7.7393bb6c.01bd15bb.6bb676bb.4773f344.c9330245.d7919eeb.ff08c1e7.5fce695c.55818220.01bd15bb",
            "identity": "4abefb94-218d-4c6c-bf23-305cc765a69f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 378,
                            "endLine": 378,
                            "startColumn": 24,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 380,
                            "endLine": 380,
                            "startColumn": 39,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 381,
                  "endLine": 381,
                  "startColumn": 54,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5b4db3ca75877ecdb3ccccc0eb5b966c6a606413d8aa55a1c194424b50615ea3",
            "1": "a11316e5.4773f344.0e553939.e052b9a9.79a7d027.c28cabb7.7393bb6c.da35a099.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.55818220.01bd15bb",
            "identity": "d0b5cd9d-a913-4e0d-be47-23603cea7301"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 378,
                            "endLine": 378,
                            "startColumn": 24,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 381,
                            "endLine": 381,
                            "startColumn": 54,
                            "endColumn": 64
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 412,
                  "endLine": 412,
                  "startColumn": 11,
                  "endColumn": 21
                }
              }
            }
          ],
          "fingerprints": {
            "0": "c20a19ff0de0ea79ef9f833426797346b5fc16e6b2000f105efb38a60ba2eb44",
            "1": "e0fda459.3f481afb.8b18f948.d7919eeb.79a7d027.c28cabb7.cd61fc56.01bd15bb.e0fda459.3f481afb.8b18f948.d7919eeb.79a7d027.c28cabb7.cd61fc56.01bd15bb",
            "identity": "8b89c36d-49df-4168-bd67-3e581b8c3303"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 412,
                            "endLine": 412,
                            "startColumn": 24,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 412,
                            "endLine": 412,
                            "startColumn": 11,
                            "endColumn": 21
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 414,
                  "endLine": 414,
                  "startColumn": 39,
                  "endColumn": 49
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ec3d17b75192957c3f63e48ee52cbad1fe78121f8dfe17c8dc8e8ae6002bc816",
            "1": "12567ef6.4773f344.607187b5.d7919eeb.79a7d027.c28cabb7.7393bb6c.01bd15bb.6bb676bb.4773f344.c9330245.d7919eeb.ff08c1e7.5fce695c.55818220.01bd15bb",
            "identity": "a84c2fb6-1ab9-466e-b8d1-4a7559397b71"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 412,
                            "endLine": 412,
                            "startColumn": 24,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 414,
                            "endLine": 414,
                            "startColumn": 39,
                            "endColumn": 49
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedNonCryptoSecret/test",
          "ruleIndex": 6,
          "level": "note",
          "message": {
            "text": "Avoid hardcoding values that are meant to be secret. Found a hardcoded string used in here.",
            "markdown": "Avoid hardcoding values that are meant to be secret. Found {0} used in {1}.",
            "arguments": [
              "[a hardcoded string](0)",
              "[here](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 415,
                  "endLine": 415,
                  "startColumn": 54,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "70f66aeee44a1db03e688ebd1ef4a429a5f1622ded4a5b62178365f648273342",
            "1": "a11316e5.4773f344.0e553939.e052b9a9.79a7d027.c28cabb7.7393bb6c.da35a099.6bb676bb.4773f344.c9330245.d7919eeb.79a7d027.5fce695c.55818220.01bd15bb",
            "identity": "c89c2f8b-5a89-4a99-ac38-24012fa5f13f"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 412,
                            "endLine": 412,
                            "startColumn": 24,
                            "endColumn": 46
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 415,
                            "endLine": 415,
                            "startColumn": 54,
                            "endColumn": 64
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 411,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/DOMXSS",
          "ruleIndex": 7,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into write, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to dynamically construct the HTML page on client side. This may result in a DOM Based Cross-Site Scripting attack (DOMXSS).",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9)",
              "[write](10)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/data-export/data-export.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 59,
                  "startColumn": 56,
                  "endColumn": 61
                }
              }
            }
          ],
          "fingerprints": {
            "0": "575facfcb027acf0e472d57a6fece435366b995f295eec9fb9969d1429f8bb63",
            "1": "3df95e84.4773f344.59a2b8c1.a517c54b.d43bc62e.8020cfdf.cd61fc56.dd1bc17e.721b5b6d.b649eded.59a2b8c1.2f9e311f.4463c21f.07fd8e31.83265159.fc9d7bc7",
            "identity": "2e9c9bb2-725d-4923-81f7-a4919a66646e"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/data-subject.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/data-subject.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/data-subject.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 12,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/data-subject.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 63,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/data-subject.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 28,
                            "endLine": 28,
                            "startColumn": 12,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 29,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 55,
                            "endLine": 55,
                            "startColumn": 69,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 57,
                            "endLine": 57,
                            "startColumn": 27,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 58,
                            "endLine": 58,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 62,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 59,
                            "endLine": 59,
                            "startColumn": 56,
                            "endColumn": 61
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 551,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          },
          "suppressions": [
            {
              "justification": "We understand that this could be exploited if XYZ but in this case, DEF is occurring which makes the likelihood of an exploit very low.",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2025-01-14T19:23:22.420Z",
                "ignoredBy": {
                  "name": "Ezra",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into findOne, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6)",
              "[findOne](7)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/likeProductReviews.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 15,
                  "endLine": 15,
                  "startColumn": 16,
                  "endColumn": 23
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0952513a3fc5bc1d72a02fad2177f567a84d2af25b7e3456962f248cf2eab96b",
            "1": "93652555.4773f344.07efaa4d.9163ada2.ef9f7d82.34a4d81a.df7e59ba.d66579bf.f759b1f9.4773f344.07efaa4d.08906714.79a7d027.34a4d81a.0334236c.2151aa9e",
            "identity": "c0e49981-3c46-4d0b-b046-819cfaf542e7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 11,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 31,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 24,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 16,
                            "endColumn": 23
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 804,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          },
          "suppressions": [
            {
              "justification": "CWE-23 example",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2024-12-10T19:31:26.874Z",
                "ignoredBy": {
                  "name": "Ignored by security policy",
                  "email": null
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into findOne, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[findOne](11)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/likeProductReviews.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 25,
                  "startColumn": 26,
                  "endColumn": 33
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b8e79101a6b35b5b325472c7a46cd364508336cd8d1b1ac8be5fc1376ab0bee4",
            "1": "93652555.4773f344.07efaa4d.9163ada2.ef9f7d82.34a4d81a.df7e59ba.d66579bf.9028439d.4773f344.07efaa4d.9163ada2.79a7d027.34a4d81a.df7e59ba.2151aa9e",
            "identity": "74d8a689-815e-4d82-b171-c7e8676e5244"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 11,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 31,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 18,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 41,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 36,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 34,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 26,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 804,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          },
          "suppressions": [
            {
              "justification": "CWE-23 example",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2024-12-10T19:31:26.874Z",
                "ignoredBy": {
                  "name": "Ignored by security policy",
                  "email": null
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into update, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[update](9)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/likeProductReviews.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 18,
                  "endLine": 18,
                  "startColumn": 20,
                  "endColumn": 26
                }
              }
            }
          ],
          "fingerprints": {
            "0": "cff40d4af84da679c963603b4f65cbd1f8289440da08ac8d3eaed577698cc10e",
            "1": "12567ef6.4773f344.607187b5.9163ada2.ef9f7d82.34a4d81a.df7e59ba.d66579bf.9028439d.4773f344.07efaa4d.9163ada2.79a7d027.34a4d81a.df7e59ba.2151aa9e",
            "identity": "ff89317a-4ca1-48c3-9d19-4abde2e6b010"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 11,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 31,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 18,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 11,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 18,
                            "endLine": 18,
                            "startColumn": 20,
                            "endColumn": 26
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 804,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          },
          "suppressions": [
            {
              "justification": "CWE-23 example",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2024-12-10T19:31:26.874Z",
                "ignoredBy": {
                  "name": "Ignored by security policy",
                  "email": null
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into update, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[update](13)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/likeProductReviews.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 35,
                  "startColumn": 28,
                  "endColumn": 34
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a5a0a81b716792b9815fbda38deb10511e7fe5e7ae385601f0c740a3678fb0dc",
            "1": "12567ef6.4773f344.607187b5.9163ada2.ef9f7d82.34a4d81a.df7e59ba.d66579bf.9028439d.4773f344.07efaa4d.9163ada2.79a7d027.34a4d81a.df7e59ba.2151aa9e",
            "identity": "c20c9050-6b18-4ad6-89dd-9d6aae3b0a04"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 20,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 11,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 31,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 26,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 18,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 41,
                            "endColumn": 43
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 25,
                            "endLine": 25,
                            "startColumn": 36,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 26,
                            "endColumn": 28
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 21,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 36,
                            "endLine": 36,
                            "startColumn": 19,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/likeProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 28,
                            "endColumn": 34
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 804,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          },
          "suppressions": [
            {
              "justification": "CWE-23 example",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2024-12-10T19:31:26.874Z",
                "ignoredBy": {
                  "name": "Ignored by security policy",
                  "email": null
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into update, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4)",
              "[update](5)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/updateProductReviews.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 14,
                  "startColumn": 16,
                  "endColumn": 22
                }
              }
            }
          ],
          "fingerprints": {
            "0": "29a059bd9abd6265969369982cac7fc3960df6f55e6b232a8a29f1d21a9818b3",
            "1": "12567ef6.4773f344.607187b5.9163ada2.ef9f7d82.34a4d81a.df7e59ba.d66579bf.f759b1f9.4773f344.2d2c7aff.08906714.79a7d027.34a4d81a.0334236c.2151aa9e",
            "identity": "fd1ea270-5cb5-438d-bcbb-9782730bd1c7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/updateProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/updateProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 18,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/updateProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 14,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/updateProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 9,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/updateProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 7,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/updateProductReviews.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 16,
                            "endColumn": 22
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 754,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          },
          "suppressions": [
            {
              "justification": "CWE-23 example",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2024-12-10T19:31:26.874Z",
                "ignoredBy": {
                  "name": "Ignored by security policy",
                  "email": null
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/NoSqli",
          "ruleIndex": 8,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into update, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an NoSQL query. This may result in an NoSQL Injection vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4)",
              "[update](5)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/orderHistory.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "startColumn": 21,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ef70432ce1a00ecde1b75e67650736df9e1ca8b685d7c1dc137ff044218e5aca",
            "1": "81df8a01.4773f344.c9330245.9163ada2.ef9f7d82.8020cfdf.df7e59ba.d087f7d7.5a562d4f.4773f344.c9330245.9163ada2.79a7d027.f8890b3c.0334236c.d087f7d7",
            "identity": "000cfbcf-59f4-4f77-bf66-3272ed11f8bc"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/orderHistory.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 39,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/orderHistory.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 39,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/orderHistory.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 35,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/orderHistory.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 30,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/orderHistory.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 28,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/orderHistory.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 21,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 754,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          },
          "suppressions": [
            {
              "justification": "CWE-23 example",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2024-12-10T19:31:26.874Z",
                "ignoredBy": {
                  "name": "Ignored by security policy",
                  "email": null
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/Ssrf",
          "ruleIndex": 9,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into request.get, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3),(4),(5)",
              "[request.get](6)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/profileImageUrlUpload.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 20,
                  "startColumn": 30,
                  "endColumn": 15
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9db4dd8f66687239ad6126bca2ec27284ce0402901bb1c83ae041d09d1f4e2ed",
            "1": "dca15045.70dd3b3b.568208f0.d7919eeb.79a7d027.98c7c24d.df7e59ba.377cd288.6849fe68.70dd3b3b.568208f0.08906714.79a7d027.98c7c24d.83265159.a41fb358",
            "identity": "b2b339f7-0b47-465b-8dff-67898f5477e0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 13,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 11,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 16,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 20,
                            "startColumn": 30,
                            "endColumn": 15
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 801,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          },
          "suppressions": [
            {
              "justification": "Showing Seth",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2024-12-10T19:29:46.282Z",
                "ignoredBy": {
                  "name": "Ezra Tanzer",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/HTTPSourceWithUncheckedType",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "The type of this object, coming from body and the value of its match property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "markdown": "The type of this {0}, coming from {1} and the value of its {2} property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "arguments": [
              "[object](0)",
              "[body](1)",
              "[match](2)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/profileImageUrlUpload.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 16,
                  "startColumn": 15,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3e5ff40b483c13bd20cd85c93412c94c570df311ad14a6007361bca9de6429d1",
            "1": "6849fe68.4773f344.d2ee7ce0.d7919eeb.b6be8b13.8020cfdf.ec6ba6ab.fcee3017.6849fe68.4773f344.8b18f948.08906714.b6be8b13.8020cfdf.83265159.a41fb358",
            "identity": "3837ee34-07f1-4c89-8be6-a4fd162d0382"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 11,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 16,
                            "endLine": 16,
                            "startColumn": 15,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HTTPSourceWithUncheckedType",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "The type of this object, coming from body and the value of its split property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "markdown": "The type of this {0}, coming from {1} and the value of its {2} property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "arguments": [
              "[object](0)",
              "[body](1)",
              "[split](2)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/profileImageUrlUpload.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "startColumn": 77,
                  "endColumn": 82
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fb73c38fb2e6706aced2e931b6395efd55614e9b195d7e415aae8f05b6d8396d",
            "1": "dca15045.bf4464f1.c13ab5fc.73f98346.b6be8b13.8020cfdf.2a970955.e6a09cc0.dca15045.bf4464f1.c13ab5fc.73f98346.79a7d027.8020cfdf.2a970955.e6a09cc0",
            "identity": "78c53baa-6d48-4e93-a708-5d6c20228cb0"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 73,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 77,
                            "endColumn": 82
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HTTPSourceWithUncheckedType",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "The type of this object, coming from body and the value of its split property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "markdown": "The type of this {0}, coming from {1} and the value of its {2} property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "arguments": [
              "[object](0)",
              "[body](1)",
              "[split](2)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/profileImageUrlUpload.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "startColumn": 122,
                  "endColumn": 127
                }
              }
            }
          ],
          "fingerprints": {
            "0": "fb73c38fb2e6706aced2e931b6395efd55614e9b195d7e415aae8f05b6d8396d",
            "1": "dca15045.bf4464f1.c13ab5fc.73f98346.b6be8b13.8020cfdf.2a970955.e6a09cc0.dca15045.bf4464f1.568208f0.73f98346.79a7d027.98c7c24d.2a970955.fcee3017",
            "identity": "607b5ebb-9a9a-4ad6-9e06-e4dc3f63b5b2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 118,
                            "endColumn": 121
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 23,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/profileImageUrlUpload.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 27,
                            "endLine": 27,
                            "startColumn": 122,
                            "endColumn": 127
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HTTPSourceWithUncheckedType",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "The type of this object, coming from query and the value of its length property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "markdown": "The type of this {0}, coming from {1} and the value of its {2} property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "arguments": [
              "[object](0)",
              "[query](1)",
              "[length](2)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/search.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "startColumn": 26,
                  "endColumn": 32
                }
              }
            }
          ],
          "fingerprints": {
            "0": "888873299d21a5f595b428c81fc557a9603035d34139ceb5b94aded788d90991",
            "1": "d6aab2be.4773f344.2736cee9.d7919eeb.ef9f7d82.8020cfdf.a99379eb.ae94f388.29386b0b.4773f344.2736cee9.c559ebce.5540c8e4.daa64470.83265159.40e83381",
            "identity": "e2d92e22-d07d-46ad-8c78-5b8494ca808a"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 59,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HTTPSourceWithUncheckedType",
          "ruleIndex": 10,
          "level": "note",
          "message": {
            "text": "The type of this object, coming from query and the value of its substring property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "markdown": "The type of this {0}, coming from {1} and the value of its {2} property can be controlled by the user. An attacker may craft the properties of the object to crash the application or bypass its logic. Consider checking the type of the object.",
            "arguments": [
              "[object](0)",
              "[query](1)",
              "[substring](2)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/search.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "startColumn": 63,
                  "endColumn": 72
                }
              }
            }
          ],
          "fingerprints": {
            "0": "888873299d21a5f595b428c81fc557a9603035d34139ceb5b94aded788d90991",
            "1": "fc2715a0.4773f344.2736cee9.c8688b2b.ef9f7d82.daa64470.a99379eb.ae94f388.d6aab2be.4773f344.2736cee9.c8688b2b.ef9f7d82.daa64470.a99379eb.ae94f388",
            "identity": "b8c4b78f-a8b2-4ae5-97d9-41fc89cadeeb"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 54,
                            "endColumn": 62
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 59,
                            "endColumn": 64
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 63,
                            "endColumn": 72
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 403,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/HardcodedSecret",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Hardcoded value is used as a cipher key (in crypto.createHmac). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "markdown": "Hardcoded {0} is used as a {1}. Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "arguments": [
              "[value](0)",
              "[cipher key (in crypto.createHmac)](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/insecurity.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 19,
                  "endLine": 19,
                  "startColumn": 20,
                  "endColumn": 902
                }
              }
            }
          ],
          "fingerprints": {
            "0": "5166d04c9fda2885471cdc6ab0b172ebb78ce371afdabc41346a4539d411468f",
            "1": "ae77ea27.4773f344.8b18f948.d7919eeb.feee7bcb.5fce695c.c8cd882a.89d75565.a7100f88.3458f5f1.191eaf2b.c559ebce.79a7d027.fbb912ee.b98ad8ad.6de55b96",
            "identity": "796b99dc-4fe2-45d5-8a61-3f9c148babe8"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/insecurity.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 20,
                            "endColumn": 902
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/insecurity.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 129,
                            "endLine": 129,
                            "startColumn": 16,
                            "endColumn": 33
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": [
            {
              "justification": "Really good reason added on 2024-12-18",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2024-12-18T16:20:41.393Z",
                "ignoredBy": {
                  "name": "Ezra",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/HardcodedSecret",
          "ruleIndex": 11,
          "level": "error",
          "message": {
            "text": "Hardcoded value is used as a cipher key (in crypto.createHmac). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "markdown": "Hardcoded {0} is used as a {1}. Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "arguments": [
              "[value](0)",
              "[cipher key (in crypto.createHmac)](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/insecurity.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22,
                  "startColumn": 52,
                  "endColumn": 78
                }
              }
            }
          ],
          "fingerprints": {
            "0": "a880faa34c5693a2d6b2e59e8db0972788cb28add2a2226680f3ddae56c29b24",
            "1": "37bc1bfe.4773f344.191eaf2b.d9da6552.7b7eed37.8020cfdf.7a8c7288.71520ffe.a7100f88.fa7f0cc6.191eaf2b.d9da6552.f7b6c27c.5fce695c.53ce9024.71520ffe",
            "identity": "a043a4a7-5641-43c9-840c-c1b51b58327b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/insecurity.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 52,
                            "endColumn": 78
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/insecurity.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 24,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": [
            {
              "justification": "A good reason",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2024-12-05T23:31:40.332Z",
                "ignoredBy": {
                  "name": "Ezra",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/UseCsurfForExpress",
          "ruleIndex": 12,
          "level": "warning",
          "message": {
            "text": "CSRF protection is disabled for your Express app. This allows the attackers to execute requests on a user's behalf.",
            "markdown": "CSRF protection is disabled for your {0}. This allows the attackers to execute requests on a user's behalf.",
            "arguments": [
              "[Express app](0)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "server.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 72,
                  "startColumn": 13,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "664da7ba48be98ab822d9c70a0ff447ecaea2c5ffacbbc032988afb1a0d8c4d1",
            "1": "ae77ea27.4773f344.8b18f948.d7919eeb.a1fb1152.5fce695c.ea4b1c47.89d75565.a2e188ea.3fe2c7c2.b60fc218.dc122b89.42997152.5fce695c.ceb6c0f9.c614b2f7",
            "identity": "88e7520c-0ad3-4d8d-8d2a-231fabfbaf30"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "server.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 72,
                            "endLine": 72,
                            "startColumn": 13,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 501,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": [
            {
              "justification": "Decent reason to ignore",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2025-01-24T20:44:58.800Z",
                "ignoredBy": {
                  "name": "Ezra",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 13,
          "level": "note",
          "message": {
            "text": "md5 hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[md5](0)",
              "[crypto.createHash](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/insecurity.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 21,
                  "startColumn": 24,
                  "endColumn": 41
                }
              }
            }
          ],
          "fingerprints": {
            "0": "29b403f6dcabf37a15709d4889725010023d511ca920a2edd9335a4ffe903e63",
            "1": "3df95e84.4773f344.191eaf2b.d9da6552.ef9f7d82.8020cfdf.7a8c7288.71520ffe.a7100f88.fa7f0cc6.191eaf2b.d9da6552.f7b6c27c.5fce695c.04f551bd.71520ffe",
            "identity": "6ec54cf2-5bd6-4b42-a47d-5fa1d75185ed"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/insecurity.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 42,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/insecurity.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 24,
                            "endColumn": 41
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 402,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 13,
          "level": "note",
          "message": {
            "text": "md5 hash (used in crypto.createHash) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[md5](0)",
              "[crypto.createHash](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "Gruntfile.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 71,
                  "endLine": 71,
                  "startColumn": 19,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "ad7c947f22114a9da928c2705c1c968fe843cea639acc1c5f3bf90b2a8c27cca",
            "1": "37bc1bfe.d2255a1c.191eaf2b.d7919eeb.ef9f7d82.8020cfdf.cd61fc56.71520ffe.37bc1bfe.4773f344.191eaf2b.d7919eeb.f7b6c27c.8020cfdf.cd61fc56.71520ffe",
            "identity": "cc0be130-70b9-4983-85ef-80b2979a46b2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "Gruntfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 37,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "Gruntfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 71,
                            "endLine": 71,
                            "startColumn": 19,
                            "endColumn": 36
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 352,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/InsecureHash",
          "ruleIndex": 13,
          "level": "note",
          "message": {
            "text": "SHA-1 hash (used in jssha) is insecure. Consider changing it to a secure hashing algorithm.",
            "markdown": "{0} hash (used in {1}) is insecure. Consider changing it to a secure hashing algorithm.",
            "arguments": [
              "[SHA-1](0)",
              "[jssha](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lib/utils.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 96,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "898d326d1e77e614f0a9802c2889341f465d6d789595b73b672d7b2855bd5155",
            "1": "47d62eac.4773f344.2ff86584.d7919eeb.a21268d8.8c503821.4682c195.b8ef0081.47d62eac.4773f344.2ff86584.d7919eeb.a21268d8.8c503821.4682c195.b8ef0081",
            "identity": "993bb8c0-2663-4f0e-9b97-b0be1e9aaca2"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 28,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "lib/utils.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 96,
                            "endLine": 96,
                            "startColumn": 22,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 352,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/Sqli",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7)",
              "[query](8)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/search.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 14,
                  "endLine": 14,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d7dd256a418b22be430b99e49a2864e16db9ad3bcebf5be6070df61b0e500029",
            "1": "cf7733e4.4773f344.607187b5.a517c54b.ef9f7d82.34a4d81a.a99379eb.25f903e1.cf7733e4.277c621c.2736cee9.c8688b2b.a48c4432.946bc9b2.83265159.40e83381",
            "identity": "ffaf7af9-a9f3-42f0-84e5-d43d63d40ae9"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 24,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 24,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 20,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 17,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 13,
                            "endLine": 13,
                            "startColumn": 43,
                            "endColumn": 51
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 74,
                            "endColumn": 82
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 28,
                            "endColumn": 160
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/search.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 22,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 802,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": [
            {
              "justification": "Good reason",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2024-12-05T23:30:42.367Z",
                "ignoredBy": {
                  "name": "Ezra",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/Sqli",
          "ruleIndex": 14,
          "level": "error",
          "message": {
            "text": "Unsanitized input from the HTTP request body flows into query, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used in an SQL query. This may result in an SQL Injection vulnerability.",
            "arguments": [
              "[the HTTP request body](0)",
              "[flows](1),(2),(3)",
              "[query](4)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/login.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "startColumn": 22,
                  "endColumn": 27
                }
              }
            }
          ],
          "fingerprints": {
            "0": "9557079259256f1d94f16c0e176e81f0693c95a86c3280fb56526d5e98c10b66",
            "1": "cf7733e4.4773f344.607187b5.f1c2bfe1.ef9f7d82.34a4d81a.0b4f0b50.25f903e1.f759b1f9.daa9d8e7.68d1d5e2.08906714.65a3cf23.41a0a25e.f144dc57.4acb4564",
            "identity": "f4b3f587-78a5-4234-bb4c-96557d7ce537"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/login.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 72,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/login.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 72,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/login.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 60,
                            "endLine": 60,
                            "startColumn": 68,
                            "endColumn": 76
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/login.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 28,
                            "endColumn": 172
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/login.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 29,
                            "endLine": 29,
                            "startColumn": 22,
                            "endColumn": 27
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 752,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": [
            {
              "justification": "Testing a double ignore",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2024-12-12T17:20:05.809Z",
                "ignoredBy": {
                  "name": "Ezra Tanzer",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/HardcodedSecret/test",
          "ruleIndex": 15,
          "level": "note",
          "message": {
            "text": "Hardcoded value is used as a cipher key (in jsonwebtoken.sign). Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "markdown": "Hardcoded {0} is used as a {1}. Generate the value with a cryptographically strong random number generator and do not hardcode it in source code.",
            "arguments": [
              "[value](0)",
              "[cipher key (in jsonwebtoken.sign)](1)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/api/2faSpec.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 143,
                  "endLine": 143,
                  "startColumn": 8,
                  "endColumn": 39
                }
              }
            }
          ],
          "fingerprints": {
            "0": "48119cab7b15b552d7082fddd6be65b45e7b161270c10b283cbca011f91ff24e",
            "1": "20326186.4773f344.8b18f948.d7919eeb.79a7d027.8020cfdf.df938d4d.45cbaa21.20326186.4773f344.8b18f948.d7919eeb.3c31e05c.c785452b.df938d4d.8a8217fe",
            "identity": "84765d9e-5f18-4941-bb09-8d48a5134bcf"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 8,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/api/2faSpec.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 140,
                            "endLine": 140,
                            "startColumn": 31,
                            "endColumn": 39
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 401,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16),(17)",
              "[bypassSecurityTrustHtml](18)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/score-board/score-board.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 87,
                  "startColumn": 16,
                  "endColumn": 36
                }
              }
            }
          ],
          "fingerprints": {
            "0": "3e7c2f23132d6cb0ffba20fe6c363b90dff9a12dd88db8d41efbd7465b4ff2b2",
            "1": "72e8bf12.664e3b30.2dca12fa.c559ebce.bcc99e61.8020cfdf.83265159.de97a755.72e8bf12.664e3b30.2dca12fa.83f1b447.bcc99e61.8020cfdf.83265159.de97a755",
            "identity": "60259f15-0f2b-445d-9776-3dbfd7835a9d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 73,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 91,
                            "endColumn": 99
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 91,
                            "endColumn": 104
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 68,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 63,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 12,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 63,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 29,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 37,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 37,
                            "endColumn": 55
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 167,
                            "endLine": 167,
                            "startColumn": 25,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 68,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 68,
                            "endColumn": 99
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 18,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 44,
                            "endColumn": 67
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 556,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          },
          "suppressions": [
            {
              "justification": "Lazy reason #5",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2025-01-17T16:52:57.088Z",
                "ignoredBy": {
                  "name": "Ezra",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16)",
              "[bypassSecurityTrustHtml](17)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/score-board/score-board.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 168,
                  "endLine": 168,
                  "startColumn": 44,
                  "endColumn": 67
                }
              }
            }
          ],
          "fingerprints": {
            "0": "b8ac09e1302745f03c6a6faf5302100241e63ce56a0b305545d2e8de0cf2bcbc",
            "1": "7921a677.4773f344.607187b5.a517c54b.ef9f7d82.8020cfdf.df7e59ba.cde67692.72e8bf12.664e3b30.21371afe.dee12555.fbac9e17.787328db.83265159.de97a755",
            "identity": "ae3b61d1-96bd-4ea0-88d5-2ae407611c01"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 73,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 91,
                            "endColumn": 99
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 91,
                            "endColumn": 104
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 68,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 63,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/challenge.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 12,
                            "endColumn": 67
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 29,
                            "endColumn": 33
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 83,
                            "endLine": 83,
                            "startColumn": 63,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 84,
                            "endLine": 84,
                            "startColumn": 27,
                            "endColumn": 37
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 85,
                            "endLine": 85,
                            "startColumn": 29,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 86,
                            "endLine": 86,
                            "startColumn": 32,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 87,
                            "endLine": 87,
                            "startColumn": 37,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 167,
                            "endLine": 167,
                            "startColumn": 25,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 68,
                            "endColumn": 77
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 68,
                            "endColumn": 99
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/score-board/score-board.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 168,
                            "endLine": 168,
                            "startColumn": 44,
                            "endColumn": 67
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 556,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[bypassSecurityTrustHtml](9)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/data-export/data-export.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 46,
                  "startColumn": 37,
                  "endColumn": 60
                }
              }
            }
          ],
          "fingerprints": {
            "0": "0753af18fb1761847a98257f74c98e2954f566593515d3ef590bfeca5fe42b85",
            "1": "3df95e84.4773f344.607187b5.74eb2808.ef9f7d82.8020cfdf.83265159.428468b6.a6348f37.70b638aa.8b3a84e3.c559ebce.4463c21f.51429c53.83265159.7f547f77",
            "identity": "a8a68014-2998-47ae-b918-db1082ee14fe"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/image-captcha.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/image-captcha.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/image-captcha.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 12,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/image-captcha.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 68,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/image-captcha.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 12,
                            "endColumn": 72
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 30,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 45,
                            "endLine": 45,
                            "startColumn": 54,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 61,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 61,
                            "endColumn": 71
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/data-export/data-export.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 46,
                            "endLine": 46,
                            "startColumn": 37,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 556,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[bypassSecurityTrustHtml](13)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/track-result/track-result.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 42,
                  "startColumn": 45,
                  "endColumn": 68
                }
              }
            }
          ],
          "fingerprints": {
            "0": "d9de429582169bef10adcbbeab64357c4368f5420377272a31cead300787cddd",
            "1": "cf7733e4.4773f344.ed5da594.a517c54b.ef9f7d82.32f843a3.0b4f0b50.116a0c7b.cf7733e4.0e36c36d.0a3df746.c8688b2b.ab9128a4.32f843a3.83265159.116a0c7b",
            "identity": "5cad4d5e-23ab-4ef2-b058-4fcb05d77e2d"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/track-order.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/track-order.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/track-order.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 62,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/track-order.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 80,
                            "endColumn": 88
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/track-order.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 57,
                            "endColumn": 60
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/track-order.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 52,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/track-order.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 12,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/track-result/track-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 28,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/track-result/track-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 41,
                            "endLine": 41,
                            "startColumn": 58,
                            "endColumn": 65
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/track-result/track-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 78,
                            "endColumn": 85
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/track-result/track-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 78,
                            "endColumn": 90
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/track-result/track-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 78,
                            "endColumn": 93
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/track-result/track-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 69,
                            "endColumn": 110
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/track-result/track-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 42,
                            "endLine": 42,
                            "startColumn": 45,
                            "endColumn": 68
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 506,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15),(16)",
              "[bypassSecurityTrustHtml](17)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/about/about.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "startColumn": 47,
                  "endColumn": 70
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7e30cbf4503d34f724fc4b42b7ef895ee54f2ef1a96baaf19b24b06980a24400",
            "1": "7921a677.4773f344.607187b5.a517c54b.ef9f7d82.81760a8a.566b8f28.cde67692.73fb2c46.3635f48a.d7512ab0.e6336d2f.4463c21f.2fe76d31.83265159.0bd657c9",
            "identity": "44f54e58-7dba-4e67-8094-9803efee6e25"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 18,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 36,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 36,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 24,
                            "startColumn": 12,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 78,
                            "endLine": 78,
                            "startColumn": 44,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 79,
                            "endLine": 79,
                            "startColumn": 27,
                            "endColumn": 36
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 78,
                            "endColumn": 87
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 129,
                            "endColumn": 138
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 80,
                            "endLine": 80,
                            "startColumn": 9,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 71,
                            "endColumn": 80
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 71,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 71,
                            "endColumn": 91
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 17,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/about/about.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 81,
                            "endLine": 81,
                            "startColumn": 47,
                            "endColumn": 70
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 506,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13)",
              "[bypassSecurityTrustHtml](14)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/administration/administration.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 52,
                  "startColumn": 37,
                  "endColumn": 60
                }
              }
            }
          ],
          "fingerprints": {
            "0": "118ec9493b489a73c0d0ae8ef35c6f5af48af54b4d9deeed89a86166ff9159c7",
            "1": "839b1d0f.4773f344.607187b5.824d2503.ef9f7d82.8020cfdf.0b4f0b50.ae94f388.46b7c801.6b0b4bb5.81f55990.72a8f743.4463c21f.7312b3d3.83265159.a83217da",
            "identity": "e31f6bf1-5ac6-4a92-88df-18e94935f0da"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/user.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/user.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/user.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 112,
                            "endColumn": 125
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/user.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 5,
                            "endColumn": 13
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/user.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 31,
                            "endLine": 31,
                            "startColumn": 5,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/user.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 107,
                            "endColumn": 110
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/user.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 102,
                            "endColumn": 106
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/user.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 30,
                            "endLine": 30,
                            "startColumn": 12,
                            "endColumn": 106
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 22,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 40,
                            "endColumn": 45
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 51,
                            "endLine": 51,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 77,
                            "endColumn": 81
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 119,
                            "endColumn": 123
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 61,
                            "endColumn": 138
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 52,
                            "endLine": 52,
                            "startColumn": 37,
                            "endColumn": 60
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 556,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          },
          "suppressions": [
            {
              "justification": "Ignoring on 2024-12-23",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2024-12-23T18:05:40.138Z",
                "ignoredBy": {
                  "name": "Ezra",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from data from a remote resource flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[data from a remote resource](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12)",
              "[bypassSecurityTrustHtml](13)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/administration/administration.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 68,
                  "endLine": 68,
                  "startColumn": 43,
                  "endColumn": 66
                }
              }
            }
          ],
          "fingerprints": {
            "0": "1b0c3ee1fbfe114cbf867ed10f26e6829c8e28a1912b85dad4eff9c3c5437dfb",
            "1": "7921a677.4773f344.607187b5.d7919eeb.ef9f7d82.81760a8a.566b8f28.cde67692.a6348f37.70b638aa.2f02feb9.4a954e56.4463c21f.7312b3d3.83265159.a83217da",
            "identity": "76cc8fb7-2b62-4466-b8af-27d75030eba7"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 22,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 18,
                            "endColumn": 31
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 36,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 36,
                            "endColumn": 49
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 13,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 24,
                            "endLine": 24,
                            "startColumn": 8,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/Services/feedback.service.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 24,
                            "startColumn": 12,
                            "endColumn": 12
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 65,
                            "endLine": 65,
                            "startColumn": 44,
                            "endColumn": 53
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 67,
                            "endLine": 67,
                            "startColumn": 16,
                            "endColumn": 24
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 67,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 67,
                            "endColumn": 83
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/administration/administration.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 68,
                            "endLine": 68,
                            "startColumn": 43,
                            "endColumn": 66
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 556,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          },
          "suppressions": [
            {
              "justification": "Showing off again to Waleed",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2025-01-15T17:49:18.483Z",
                "ignoredBy": {
                  "name": "Ezra",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Unsanitized input from cookies flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[cookies](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10),(11),(12),(13),(14),(15)",
              "[send](16)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/userProfile.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "startColumn": 15,
                  "endColumn": 19
                }
              }
            }
          ],
          "fingerprints": {
            "0": "12f171226267c2951706b942bff52f51c0f53c5ad0bbb3c2f62a0e7bb8c9da9b",
            "1": "839b1d0f.4773f344.a32ed1a1.d7919eeb.ef9f7d82.8020cfdf.cd61fc56.2f05c567.dca15045.6b0b4bb5.7fde84c3.72a8f743.fd661388.554abc3e.2cbfbe92.9965dac8",
            "identity": "b1c00f6d-7e5e-4f1c-86f4-bbc194e6ee6b"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 66,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 66,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 62,
                            "endColumn": 73
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 58,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 19,
                            "endLine": 19,
                            "startColumn": 13,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 20,
                            "endLine": 20,
                            "startColumn": 11,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 30,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 30,
                            "endColumn": 47
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 21,
                            "endColumn": 29
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 57,
                            "endColumn": 61
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 26,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 23,
                            "endLine": 23,
                            "startColumn": 26,
                            "endColumn": 41
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 12,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 71,
                            "endColumn": 86
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 13,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 47,
                            "endLine": 47,
                            "startColumn": 41,
                            "endColumn": 56
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 14,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 48,
                            "endLine": 48,
                            "startColumn": 73,
                            "endColumn": 88
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 15,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 20,
                            "endColumn": 22
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 16,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/userProfile.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 54,
                            "endLine": 54,
                            "startColumn": 15,
                            "endColumn": 19
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 806,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileSource"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": [
            {
              "justification": "Demo",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2024-12-10T16:39:30.703Z",
                "ignoredBy": {
                  "name": "Ezra Tanzer",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[bypassSecurityTrustHtml](9)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/search-result/search-result.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 144,
                  "endLine": 144,
                  "startColumn": 41,
                  "endColumn": 64
                }
              }
            }
          ],
          "fingerprints": {
            "0": "baa076eefaa942325ac48ce2d81a27663788b692b21ae9cbe18d650238ba9eba",
            "1": "b7602041.4773f344.607187b5.c484ae4b.ef9f7d82.8020cfdf.ea235696.cde67692.1f17e802.b6e32c83.72aa1700.c484ae4b.4463c21f.33e93315.ca2eca62.5b5a306a",
            "identity": "2b0da4a1-65e2-4108-96d2-d545c01f54d5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 137,
                            "endLine": 137,
                            "startColumn": 62,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 137,
                            "endLine": 137,
                            "startColumn": 62,
                            "endColumn": 63
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 137,
                            "endLine": 137,
                            "startColumn": 9,
                            "endColumn": 27
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 138,
                            "endLine": 138,
                            "startColumn": 9,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 139,
                            "endLine": 139,
                            "startColumn": 20,
                            "endColumn": 30
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 139,
                            "endLine": 139,
                            "startColumn": 31,
                            "endColumn": 35
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 141,
                            "endLine": 141,
                            "startColumn": 58,
                            "endColumn": 68
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 143,
                            "endLine": 143,
                            "startColumn": 32,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 65,
                            "endColumn": 75
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/search-result/search-result.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 144,
                            "endLine": 144,
                            "startColumn": 41,
                            "endColumn": 64
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 756,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": [
            {
              "justification": "Showing Jeff",
              "properties": {
                "category": "not-vulnerable",
                "expiration": null,
                "ignoredOn": "2024-12-12T17:18:36.853Z",
                "ignoredBy": {
                  "name": "Ezra Tanzer",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 16,
          "level": "warning",
          "message": {
            "text": "Unsanitized input from browser storage flows into bypassSecurityTrustHtml, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[browser storage](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8)",
              "[bypassSecurityTrustHtml](9)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 37,
                  "endLine": 37,
                  "startColumn": 43,
                  "endColumn": 66
                }
              }
            }
          ],
          "fingerprints": {
            "0": "7af41dc156328b26cb8702350a931f4d10d47b13258ed64d326091f15a1413bf",
            "1": "cf7733e4.4773f344.607187b5.400fd3fd.90100e46.8020cfdf.0b4f0b50.66506c4e.46b7c801.706318d0.86aa5c73.400fd3fd.4463c21f.8020cfdf.cebf5fac.5691ba88",
            "identity": "bcf33129-e4bc-40a9-9a20-0f3f8d9f4cd5"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 32,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 32,
                            "endColumn": 39
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 32,
                            "endLine": 32,
                            "startColumn": 11,
                            "endColumn": 16
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 33,
                            "endLine": 33,
                            "startColumn": 9,
                            "endColumn": 14
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 27,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 34,
                            "endLine": 34,
                            "startColumn": 17,
                            "endColumn": 26
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 11,
                            "endColumn": 18
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 35,
                            "endLine": 35,
                            "startColumn": 11,
                            "endColumn": 23
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 67,
                            "endColumn": 111
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "frontend/src/app/last-login-ip/last-login-ip.component.ts",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 37,
                            "endLine": 37,
                            "startColumn": 43,
                            "endColumn": 66
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 506,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": [
            {
              "justification": "A compensating control",
              "properties": {
                "category": "not-vulnerable",
                "expiration": "2025-07-22T07:00:00Z",
                "ignoredOn": "2025-01-22T18:49:37.596Z",
                "ignoredBy": {
                  "name": "Ezra Tanzer",
                  "email": "ezra.tanzer@snyk.io"
                }
              }
            }
          ]
        },
        {
          "ruleId": "javascript/XSS",
          "ruleIndex": 16,
          "level": "error",
          "message": {
            "text": "Unsanitized input from an HTTP parameter flows into send, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used to render an HTML page returned to the user. This may result in a Cross-Site Scripting attack (XSS).",
            "arguments": [
              "[an HTTP parameter](0)",
              "[flows](1),(2),(3),(4),(5),(6),(7),(8),(9),(10)",
              "[send](11)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "routes/recycles.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 15,
                  "endLine": 15,
                  "startColumn": 16,
                  "endColumn": 20
                }
              }
            }
          ],
          "fingerprints": {
            "0": "61cc15b03b2a3da630db7a3e1de152b94fe5c1d1380525dc93935ce3b640cae8",
            "1": "716f11c4.4773f344.cae2544c.289fcdd5.d3562abd.8020cfdf.83265159.2f05c567.9dc2a0d3.4773f344.cae2544c.289fcdd5.79a7d027.f8890b3c.0334236c.e6930396",
            "identity": "d03b0f3f-ed88-41b0-aaab-23d19b705564"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 26,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 22,
                            "endColumn": 32
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 16,
                            "endColumn": 21
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 12,
                            "endLine": 12,
                            "startColumn": 7,
                            "endColumn": 9
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 11,
                            "endLine": 11,
                            "startColumn": 5,
                            "endColumn": 10
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 6,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 10,
                            "endLine": 10,
                            "startColumn": 18,
                            "endColumn": 25
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 7,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 14,
                            "endLine": 14,
                            "startColumn": 12,
                            "endColumn": 19
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 8,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 45,
                            "endColumn": 52
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 9,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 27,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 10,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 21,
                            "endColumn": 44
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 11,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "routes/recycles.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 15,
                            "endLine": 15,
                            "startColumn": 16,
                            "endColumn": 20
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 756,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "multipleOccurrence"
              },
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": true
          },
          "suppressions": null
        },
        {
          "ruleId": "javascript/Ssrf/test",
          "ruleIndex": 17,
          "level": "note",
          "message": {
            "text": "Unsanitized input from the request URL flows into the uri argument of request, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "markdown": "Unsanitized input from {0} {1} into {2}, where it is used as an URL to perform a request. This may result in a Server-Side Request Forgery vulnerability.",
            "arguments": [
              "[the request URL](0)",
              "[flows](1),(2),(3),(4)",
              "[the uri argument of request](5)"
            ]
          },
          "locations": [
            {
              "id": 0,
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "test/e2eSubfolder.js",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22,
                  "startColumn": 37,
                  "endColumn": 40
                }
              }
            }
          ],
          "fingerprints": {
            "0": "105c9ecc7d2ca455d9793eb1be785e0b4bc13b31eeebada2553abc52588ecbac",
            "1": "8daf089c.4773f344.1ce84a6f.d7919eeb.79a7d027.f7edcf51.7bd4d75d.27e83c6f.8daf089c.4773f344.1ce84a6f.c559ebce.79a7d027.98c7c24d.83265159.b20a940a",
            "identity": "125479a4-ea92-4d92-a9f4-6b0a5cc9d895"
          },
          "codeFlows": [
            {
              "threadFlows": [
                {
                  "locations": [
                    {
                      "location": {
                        "id": 0,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2eSubfolder.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 39,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 1,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2eSubfolder.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 39,
                            "endColumn": 42
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 2,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2eSubfolder.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 21,
                            "endLine": 21,
                            "startColumn": 9,
                            "endColumn": 17
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 3,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2eSubfolder.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 42,
                            "endColumn": 50
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 4,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2eSubfolder.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 37,
                            "endColumn": 40
                          }
                        }
                      }
                    },
                    {
                      "location": {
                        "id": 5,
                        "physicalLocation": {
                          "artifactLocation": {
                            "uri": "test/e2eSubfolder.js",
                            "uriBaseId": "%SRCROOT%"
                          },
                          "region": {
                            "startLine": 22,
                            "endLine": 22,
                            "startColumn": 37,
                            "endColumn": 40
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          ],
          "properties": {
            "priorityScore": 351,
            "priorityScoreFactors": [
              {
                "label": true,
                "type": "hotFileCodeFlow"
              },
              {
                "label": true,
                "type": "fixExamples"
              }
            ],
            "isAutofixable": false
          },
          "suppressions": null
        }
      ],
      "properties": {
        "coverage": [
          {
            "files": 55,
            "isSupported": true,
            "lang": "HTML",
            "type": "SUPPORTED"
          },
          {
            "files": 5,
            "isSupported": true,
            "lang": "XML",
            "type": "SUPPORTED"
          },
          {
            "files": 1,
            "isSupported": true,
            "lang": "Python",
            "type": "SUPPORTED"
          },
          {
            "files": 209,
            "isSupported": true,
            "lang": "JavaScript",
            "type": "SUPPORTED"
          },
          {
            "files": 201,
            "isSupported": true,
            "lang": "TypeScript",
            "type": "SUPPORTED"
          },
          {
            "files": 2,
            "isSupported": false,
            "lang": "XML",
            "type": "FAILED_PARSING"
          },
          {
            "files": 2,
            "isSupported": false,
            "lang": "Python",
            "type": "FAILED_PARSING"
          }
        ]
      }
    }
  ]
}